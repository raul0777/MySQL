
/* Modelagem Básica -

ENTIDADE=TABELA
CAMPOS=ATRIBUTOS */

CLIENTE

NOME - CARACTER(30)
CPF - NUMERICO(11)
EMAIL - CARACTER(30)
TELEFONE - CARACTER(30)
ENDERECO - CARACTER(100)
SEXO - CARACTER(1)

/* PROCESSO DE MODELAGEM */
/*FASE 01 E FASE 02 - AD ADM DE DADOS */

MODELAGEM CONCEITUAL - RASCUNHO
MODELAGEM LÓGICA - QUALQUER PROGRAMA DE MODELAGEM

/* FASE 03 - DBA / AD */

MODELAGEM FÍSICA - SCRIPTS DE BANCO

/* INICIANDO A MODELAGEM FÍSICA */
/* CRIANDO O BANCO DE DADOS */

CREATE DATABASE EXEMPLO 
CREATE DATABASE PROJETO;

/* CONECTANDO-SE AO BANCO */

USE PROJETO;

/* CRIANDO A TABELA DO CLIENTE */

CREATE TABLE CLIENTE(
	NOME VARCHAR(30),
	SEXO CHAR(1),
	EMAIL VARCHAR(30),
	CPF INT(11),
	TELEFONE VARCHAR(30),
	ENDERECO VARCHAR(100)
);

/* VERIFICANDO AS TABELAS DO BANCO */

SHOW TABLES;
USE EXEMPLO;
SHOW TABLES;
USE PROJETO;

/*DECOBRINDO COM É A ESTRUTURA DE UM TABELA */

DESC CLIENTE;

-----

/* TIPOS DE DADOS 
TODOS OS BANCO DE DADOS POSSUEM TIPOS QUE DEVEM SER ATRIBUIDO AOS DADOS DE UMA TABELA.
PARA CARACTERES LITERAIS, TEMOS CHA E VARCHAR, PARA NUMEROS TEMOS INT E FLOAT, PARA OBJETOS COMO FOTO E DOCUMENTOS TEMOS O BLOB, PARA TEXTO EXTENSOS, TEMOS TEXT.
A DICIPLINA DE BANCO DE DAODS E TAO FANTASTICA QUE AO ENTENDERMOS O PORQUE DAS COISAS, PODEMOS INICIAR JA EM MODO AVANÇADO E UM BOM EXEMPLO DISSO SAO OS TIPOS.
HA UMA PROFISSAO DENTRO DA AREA QUE E A DO ANALISTA DE PERFORMANCE OU TUNING, ESSE PROFICIONAL E RESPONSAVEL POR ANALISAR O BANCO DE DADOS E DEIXA-LO MAIS RAPIDO.
PARECE ALGO AVANÇADO, E E POREM, COM ALGUMAS ATITUDES SIMPLES, PODEMOS DEIXAR O BANCO SEM A NECESSIDADE DE ATUAÇAO DESSE PROFISSIONAL.
CADA CARACTER NO BANCO DE DADOS, VALE 1 BYTE.
SENDO ASSIM, SE EU ENTRO COM O JOAO ESTOU ENTRANDO COM 4 BYTES NO MEU BANCO.
E O QUE ISSO TEM A VER COM A TIAGEM DE TABELAS?
O BANCO DE DADOS FUNCIONA COMO UM DOWNLOAD DE DADOS DA INTERNET.
SE BAIXARMOS UM ARQUIVO DE 1 GIGA, TEMOS UM TEMPO MAIOR QUE O DOWNLOAD DE 50 MEGAS, CONSIDERANDO A MESMA VELOCIDADE DE CONEXAO.
AO TIPARMOS UM TABELA DE MODO ERRADO OU DISPLICENTE, VAMOS AUMENTAR A QUANTIDADES DE DADOS QUE SERA BAIXADA DO BANCO DE DADOS, PROLONGANDO ASSIM O TEMPO DE RESPOSTA.
UMA COMPARACAO BEM DIDATICA E O TIPO CHAR E VARCHAR.
A PALAVRA VAR, VEM DE VARIANT, EM INGLES, OU SEJA QUE E DINAMICA.
LOGO VIMOS QUE 1 CARACTER E IGUAL A 1 BYTE.
VEJAMOS ENTAO A TIPAGEM

VARCHAR(10)
CHAR(10)

ENTRANDO A PALAVRA JOAO
TOTAL DE BYTES VARCHAR(10)=4 BYTES
TOTAL DE BYTES CHAR(10)=10 BYTES

ISSO OCORRE POIS O CHAR NAO VARIA.
OS CARACTERES RESTANTE SERAO PREENCHIDOS COM ESPAÇO.
ELES NAO FICAO VAZIOS.
ENQUANTO QUE NO VARCHAR, O TIPO VARIA CONFORME O DADO.
ENTAO UTILIZAMOS SEMPRE O VARCHAR? NAO.
OCHARE LIGEIRAMENTE MAIS PERFORMATICO, POR NAO TER QUE GASTAR TEMPO VARIANDO DE TAMANHO.
ENTAO A REGRA E UTILIZAR SEMPRE O CHAR QUANDO SABEMOS QUE O NUMERO DE CARACTERES NAQUELA COLUNA NAO VAI VARIAR NUNCA.
POR EXEMPLO, UNIDADES FEDERATIVAS, COMO DOIS DIGITOS, SEXO COM 1 DIGITO E ASSIM POR DIANTE.
VISTA A DIFERNÇA QUE PODEMOS FAZER COM UMA TIPAGEM CORRETA DE TABELAS, NA PROXIMA AULA DETALHAREMOS OS TIPOS DO MYSQL E NOS MODULOS ESPECIFICOS DE CADA BANCO, VOCE ENTENDERA OS TIPOS DE CADA BANCO, VOCE ENTENDERA OS TIPOS CORRESPONDENTES NO SQL SERVER E NO ORACLE, QUE MUDAM MUITO POUCI. */

/* INSERINDO DADOS E VALORES NULOS */

USE PROJETO;

/* MOSTRA AS TABELAS */

SHOW TABLES;

/* EXIBINDO A EXTRUTURA DE UMA TABELA */

DESC CLIENTE;

/* SINTAXE BASICA DE INSERÇAO - INSERT INTO TABELA...*/
/* FORMA 01 - OMINTINDO AS COLUNAS */

INSERT INTO CLIENTE VALUES('JOAO','M','JOAO@GMAIL.COM',485248625,'78561863','MAIA LACERDA - ESTACIO - RIO DE JANEIRO -RJ');

INSERT INTO CLIENTE VALUES('CELIA','F','CELIA@GMAIL.COM',567281575,'28578921','RIACHUELO - CENTRO - RIO DE JANEIRO - RJ');

INSERT INTO CLIENTE VALUES('JORGE','M',NULL,218623868,'26878468','OSCAR CURY - BOM RETIRO - PATOS DE MINAS - MG');

/* FORMA 02 - COLOCANDO AS COLUNAS */

INSERT INTO CLIENTE(NOME,SEXO,ENDERECO,TELEFONE,CPF) VALUES('LILIAN','F','SENADOR SOARES - TIJUCA - RIO DE JANEIRO RJ','28517966',235885175);

/* FORMA 03 - INSERINDO CAMPOS - SOMENTE MYSQL */

INSERT INTO CLIENTE VALUES('ANA','F','ANA@GLOBO.COM',274924586,'46174862','PRES ANTONIO CARLOS - CENTRO - SAO PAULO - SP'),
						  ('CARLA','F','CARLOS@TERATI.COM',942576282,'564856312','SAMUEL SILVA -CENTRO -BELO HORIZONTE -MG');

INSERT INTO CLIENTE(NOME,SEXO,ENDERECO,TELEFONE,CPF) VALUES('CLARA','F','SENADOR SOARES - TIJUCA RIO DE JANEIRO - RJ','85474562',785127663);

INSERT INTO CLIENTE(NOME,SEXO,ENDERECO,TELEFONE,CPF) VALUES('CLARA','F','SENADOR SOARES - TIJUCA - RIO DE JANEIRO - RJ','812189248',46841534);

/* O CAMPO SELECT 
SELECAO PROJECAO E JUNCAO */

SELECT NOW() AS DATA_HORA, 'FELIPE MAFRA' AS PROFESSOR;

SELECT 'FELIPE MAFRA';

SELECT 'BANCO DE DADOS';

/* ALIAS DE COLUNAS */

SELECT NOME AS CLIENTE, SEXO, EMAIL FROM CLIENTE;

SELECT NOME, SEXO, EMAIL, ENDERECO FROM CLIENTE;

SELECT EMAIL, SEXO, ENDERECO, NOME FROM CLIENTE;

SELECT EMAIL, SEXO, ENDERECO, NOME, NOW() AS DATA_HORA FROM CLIENTE;

/* APENAS PARA FINS ACADEMICOS */

SELECT * FROM CLIENTE;

/* FILTRANDO DADOS COM WHERE E LIKE */

SELECT NOME, TELEFONE FROM CLIENTE;

/* FILTRANDO */

SELECT NOME, SEXO FROM CLIENTE WHERE SEXO = 'M';

SELECT NOME, ENDERECO FROM CLIENTE WHERE SEXO = 'F';

SELECT NOME, SEXO FROM CLIENTE WHERE ENDERECO = 'RJ';

/* UTILIZANDO O LIKE */

SELECT NOME, SEXO FROM CLIENTE WHERE ENDERECO LIKE = 'RJ';

/* CARACTER CORINGA % -> QUALQUER COISA */

SELECT NOME, SEXO FROM CLIENTE WHERE ENDERECO LIKE '%RJ';

SELECT NOME, SEXO, ENDERECO FROM CLIENTE WHERE ENDERECO LIKE '%RJ';

SELECT NOME, SEXO, ENDERECO FROM CLIENTE WHERE ENDERECO LIKE 'OSCAR CURY%';

SELECT NOME, SEXO, ENDERECO FROM CLIENTE WHERE ENDERECO LIKE '%CENTRO%';

/* RESOVENDO O EXERCICIO */

CREATE DATABASE LIVRARIA;

USE LIVRARIA;

CREATE TABLE LIVROS(
	LIVRO VARCHAR(100),
	AUTOR VARCHAR(100),
	SEXO CHAR(1),
	PAGINAS CHAR(5),
	EDITORA VARCHAR(30),
	VALOR FLOAT(10,2),
	UF CHAR(2),
	ANO CHAR(4)
);

/*VERIFICANDO OS BANCOS */

SHOW DATABASES;

/* CONECTANDO A UM BANCO */

USE LIVRARIA;

INSERT INTO LIVROS VALUES('CAVALEIRO REAL','ANA CLAUDIA','F','465','ATLAS',46.9,'RJ','2009');
INSERT INTO LIVROS VALUES('SQL PARA LEIGOS','JOAO NUNES','M','450','ADDISON',98,'SP','2018');
INSERT INTO LIVROS VALUES('RECEITAS CASEIRAS','CELIA TAVARES','F','210','ATLAS',45,'RJ','2008');
INSERT INTO LIVROS VALUES('PESSOAS EFETIVAS','EDUARDO SANTOS','M','390','BETA',78.99,'RJ','2018');
INSERT INTO LIVROS VALUES('HABITOS SAUDAVES','EDUARDO SANTOS','M','630','BETA',150.98,'RJ','2019');
INSERT INTO LIVROS VALUES('A CASA MARROM','HERMES MACEDO','M','250','BUBBA',60,'MG','2016');
INSERT INTO LIVROS VALUES('ESTACIO QUERIDO','GERALDO FRANCISCO','M','310','INSIGNIA',100,'ES','2015');
INSERT INTO LIVROS VALUES('PRA SEMPRE AMIGOS','LEDA SILVA','F','510','INSIGNIA',78.98,'ES','2011');
INSERT INTO LIVROS VALUES('COPOS INESQUECIVES','MARCOS ALCATRA','M','200','LARSON',130.98,'RS','2018');
INSERT INTO LIVROS VALUES('O PODER DA MENTE','CLARA MAFRA','F','120','CONTINENTAL',56.58,'RS','2017');

/* 1 - TRAZER TODOS OS DADOS. */

SELECT * FROM LIVROS;

/* 2 - TRAZER O NOME DO LIVRO E DO EDITORA */

SELECT LIVRO, EDITORA FROM LIVROS;

/* 3 - TRAZER O NOME DO LIVRO E A UF DOS LIVROS PUBLICADOS POR AUTORES DO SEXO MARCULINO. */ 

SELECT LIVRO, UF FROM LIVROS WHERE SEXO = 'M';

SELECT AUTOR, SEXO, LIVRO, UF FROM LIVROS WHERE SEXO = 'M';

/* 4 - TRAZER NOME DE LIVROS E NUMERO DE PAGINAS DO LIVROS PUBLICADOS POR AUTORE DO SEXO FEMININO. */

SELECT LIVRO, PAGINAS FROM LIVROS WHERE SEXO = 'F';

SELECT AUTOR, LIVRO, PAGINAS FROM LIVROS WHERE SEXO = 'F';

/* 5 - TRAZER OS VALORES DOS LIVROS DAS EDITORAS DE SAO PAULO. */

SELECT LIVRO, VALOR FROM LIVROS WHERE UF = 'SP';

SELECT UF, LIVRO, VALOR FROM LIVROS WHERE UF = 'SP';

/* 6 - TRAZER OS DADOS DOS AUTORES DO SEXO MASCULINO QUE TIVERAM LIVROS PUBLICADOS POR SAO PAULO OU RIO DE JANEIRO */

SELECT AUTOR, SEXO, UF FROM LIVROS WHERE SEXO = 'M' AND UF = 'SP' OR UF = 'RJ';

SELECT AUTOR, SEXO, UF FROM LIVROS WHERE SEXO = 'M' AND (UF = 'SP' OR UF = 'RJ');

SELECT AUTOR, SEXO, UF FROM LIVROS WHERE SEXO = 'M' AND UF = 'SP' AND PAGINAS > 100;

/* OPERADOR LOGICO OR -> PARA QUE A SAIDA DA QUERY SEJA VERDADEIRA, BASTA QUE APENAS UMA CONDICAO SEJA VERDADEIRA.
AND -> PARA QUE A SAIDA SEJA VERDADEIRA TODAS AS CONDICOES PRECISA SER VERDADEIRAS. */

/* OR - OU */

SHOW DATABASES;

USE PROJETO;

SELECT * FROM CLIENTE;

SELECT NOME, SEXO, ENDERECO FROM CLIENTE WHERE SEXO = 'M' OR ENDERECO LIKE '%RJ';

SELECT NOME, SEXO, ENDERECO FROM CLIENTE WHERE SEXO = 'M' AND ENDERECO LIKE '%RJ';

SELECT NOME, SEXO, ENDERECO FROM CLIENTE WHERE SEXO = 'F' OR ENDERECO LIKE '%ESTACIO';

/* AND - E */

SELECT NOME, SEXO, ENDERECO FROM CLIENTE WHERE SEXO = 'M' AND ENDERECO LIKE '%RJ';

SELECT NOME, SEXO, ENDERECO FROM CLIENTE WHERE SEXO = 'F' AND ENDERECO LIKE '%ESTACIO';

/* CONT (*) GROUP BY, PERFORMACE COM OPERADOR LOGICOS */

/* CONTANDO OS REGISTROS DE UMA TABELA */

SELECT COUNT(*) AS "QUANTIDADES DE REGISTORS DA TAB. CLIENTE" FROM CLIENTE;

/* OPERADOR DE GRUPO BY */

SELECT SEXO, COUNT(*) FROM CLIENTE;

SELECT * FROM CLIENTE;

SELECT SEXO, COUNT(*) FROM CLIENTE GROUP BY SEXO;

/* PERFORMACE EM OPERACOES LOGICAS */

/* 1 MILHAO DE REGISTROS PARA CONTAR */

SELECT COUNT(*) FROM CLIENTE;

SELECT SEXO, COUNT(*) FROM CLIENTE GROUP BY SEXO;

SELECT ENDERECO, COUNT(*) FROM CLIENTE GROUP BY ENDERECO;

/* CONDICAO 
SEXO = F
CIDADE = RIO DE JANEIRO 

SITUACAO - TRATANDO COM OU / OR 
70% MULHER = SEXO = F 
30% MORA NO RIO DE JANEIRO */ 

SELECT NOME, SEXO, ENDERECO FROM CLIENTE WHERE ENDERECO = 'RIO DE JANEIRO' AND SEXO = 'F';

/* EXERCICIO */

/* CONSIDERANDO O QUE VOCE APRENDEU SOBRE PERFORMACE, RESOLVA OS EXERCICIOS ABAIXO */

SELECT COUNT(*) FROM FUNCIONARIOS;

--TRAGA OS FUNCIONARIOS QUE TRABALHEM
--NO DEPARTAMENTO DE FILMES OU NO
--DEPARTAMENTOS DE ROUPAS

-- 21 | FILMES 53 | ROUPAS

--COMO ESTAMOS TRABALHANDO COM OR E A SEGUNDA OPCIONAL
--COLOCAMOS NA PRIMEIRA CONDICAO QUEM TEM MAIS CHANCES DE UMA SAIDA
--VERDADEIRA, POIS A SEGUNDA CONDICAO NAO SERA CHECADA NESSE CASO.

SELECT * FROM FUNCIONARIOS  WHERE DEPARTAMENTO = 'ROUPAS' OR DEPARTAMENTO = 'FILMES';

SELECT COUNT(*), DEPARTAMENTO FROM FUNCIONARIOS GROUP BY DEPARTAMENTOS ORDER BY 1;

WHERE DEPARTAMENTOS = 'FILMES' OR DEPARTAMENTOS = 'ROUPAS' 

--O GESTOR DE MARKETING PEDIU A LISTA DAS FUNCIONARIAS (AS) = FEMININO E QUE TRABALHE NO DEPARTAMENTO
--DE FILMES OU NO DEPARTAMENTO LA. ELE NECESITA ENVIAR UM EMAIL PARA AS COLABORADORAS
--DESSES DOIS SETORES. OR + AND *

--FEMININO 491 OCORENCIAS

SELECT COUNT(*), SEXO FROM FUNCIONARIOS GROUP BY SEXO;

--52 | LAR 21 FILMES

SELECT COUNT(*), DEPARTAMENTO FROM FUNCIONARIOS GROUP BY DEPARTAMENTO;

SELECT * FROM FUNCIONARIOS WHERE (DEPARTAMENTO = 'LAR' AND SEXO = 'FEMININO');

--TRAGA OS FUNCIONARIOS DO SEXO MASCULINO 
--OU OS FUNCIONARIOS QUE TRABALHEM NO SETOR JARDIM 

SELECT * FROM FUNCIONARIOS WHERE SEXO = 'MASCULINO' OR DEPARTAMENTO = 'JARDIM';

CREATE DATABASE EXERCICIO;

USE EXERCICIO;

CREATE TABLE FUNCIONARIOS
(
	IDFUNCIONARIO INTEGER,
	NOME VARCHAR(100),
	EMAIL VARCHAR(200),
	SEXO VARCHAR(10),
	DEPARTAMENTO VARCHAR(100),
	ADMISSAO VARCHAR(10),
	SALARIO INTEGER,
	CARGO VARCHAR(100),
	IDREGIAO INT
);

/* FILTRA VALORES NULOS */

SELECT NOME, SEXO, ENDERECO FROM CLIENTE WHERE SEXO = 'F';

SELECT NOME, SEXO, ENDERECO FROM CLIENTE WHERE EMAIL = NULL;

SELECT NOME, SEXO, EMAIL, ENDERECO FROM CLIENTE WHERE EMAIL IS NULL;

SELECT NOME, SEXO, EMAIL, ENDERECO FROM CLIENTE WHERE EMAIL IS NOT NULL;

/* IS OU IS NOT NULL */

/* UTILIZAR O UPDATE PARA ATUALIZAR VALORES */

SELECT NOME, EMAIL FROM CLIENTE;

UPDATE CLIENTE SET EMAIL = 'LILIAN@HOTMAIL.COM';

SELECT NOME, EMAIL FROM CLIENTE;

/* WHERE - VAI SER SEU MELHOR AMIGO DA VIDA INTEIRA */

SELECT * FROM CLIENTE WHERE NOME = 'LILIAN';

UPDATE CLIENTE SET EMAIL = 'JOAO@IG.COM.BR' WHERE NOME = 'JOAO';

SELECT NOME, EMAIL FROM CLIENTE;

UPDATE CLIENTE SET EMAIL = 'JORGE@IG.COM.BR' WHERE NOME = 'JORGE';

SELECT NOME, EMAIL FROM CLIENTE;

UPDATE CLIENTE SET EMAIL = 'CELIA@HOTMAIL.COM' WHERE NOME = 'CELIA';

SELECT NOME, EMAIL FROM CLIENTE;

UPDATE CLIENTE SET EMAIL = 'ANA@HOTMAIL.COM.' WHERE NOME = 'ANA';

SELECT NOME, EMAIL FROM CLIENTE;

UPDATE CLIENTE SET EMAIL = 'CARLA@HOTMAIL.COM.' WHERE NOME = 'CARLA';

SELECT NOME, EMAIL FROM CLIENTE;

/* COMMIT E ROLLBACK */

/* DELETANDO REGISTROS COM A CLAUSULA DELETE */

DELETE FROM CLIENTE;

SELECT * FROM CLIENTE WHERE NOME = 'ANA';

SELECT COUNT(*) FROM CLIENTE; --TOTAL 6

SELECT COUNT(*) FROM CLIENTE WHERE NOME = 'ANA'; --TOTAL 1

DELETE FROM CLIENTE WHERE NOME = 'ANA';

SELECT COUNT(*) FROM CLIENTE; --RESTANTE 5

SELECT 6 - 1;

SELECT * FROM CLIENTE;

INSERT INTO CLIENTE VALUES('CARLA','F','C.LOPES@UOL.COM',45165468,'5489-0048','RUA COPPER LEAF - WILLIAMSBURG - KITCHENER');

SELECT * FROM CLIENTE;

DELETE FROM CLIENTE WHERE NOME = 'CARLA' OR EMAIL = 'CARLA@HOTMAIL.COM';

SELECT * FROM CLIENTE WHERE NOME = 'CARLA' OR EMAIL = 'CARLA@HOTMAIL.COM';

SELECT * FROM CLIENTE WHERE NOME = 'CARLA' AND EMAIL = 'CARLA@HOTMAIL.COM.'; --OR TRAZ TODO MUNDO COM PELOMENS 1 DAS 2 CONDICOES

DELETE FROM CLIENTE WHERE NOME = 'CARLA' AND EMAIL = 'CARLA@HOTMAIL.COM.'; --AND TRAZ APENAS O REGISTRO QUE SATISFACA AS 2 CONDICOES

SELECT * FROM CLIENTE;

/* ENTRADAS COM MAIS TELEFONES */

UPDATE CLIENTE SET TELEFONE = '97865434' WHERE NOME = 'JOAO';

SELECT * FROM CLIENTE;

UPDATE CLIENTE SET TELEFONE = '22923110 - 97865434' WHERE NOME = 'JOAO';

SELECT * FROM CLIENTE;

SELECT SEXO, COUNT(*) FROM CLIENTE GROUP BY SEXO;

SELECT ENDERECO, COUNT(*) FROM CLIENTE GROUP BY ENDERECO;

/* HISTORIA DA MODELAGEM 

DECADA DE 70, EUA - CRISE DO SOFTWARE
FOI A CRISE QUE ATINGIU NAO SOMENTE A AREA DE TECNOLOGIA
MAS TAMBÉM TODAS AS EMPRESAS QUE UTILIZAVAM DE SISTEMAS
TECNOLOGICOS PARA CONTROLAR SEUS NEGOCIOS.

NAQUELA EPOCA, PROGRAMAR ERA UM PROCESSO ARTESANAL.
BASTAVA OLHAR O CODIGO QUE VOCE SABERIA QUEM O
ESCREVEU, TAO POUCOS ERAM OS PROGRAMADORES EACHTAO ARCAICO ERAM
OS METODOS DE PROGRAMACAO. EM UM PRIMEIRO MOMENTO,
OS PROFISSIONAIS DE TI VIRAM A NECESSIDADE DE SE PROGRAMAR
E INICIARAM SUA CAMINHADA, CONSTRUINDO SISTEMAS QUE ATENDIAM
NUM PRIMEIRO MOMENTO, MAS DEPOIS TRAZIAM INFORMACOES ERRADAS,
PROVOCANDO A FALENCIA DE DIVERSAS EMPRESAS. LEMBRE-SE: INFORMACOES
ERRADAS PODEM LEVAR A SUA EMPRESA A FALENCIA, E FOI ISSO QUE ACONTECEU.
ISSO OCORRIA POIS OS PROFISSIONAIS SABIAM PROGRAMAR MAS ENTENDIAM APENAS
DO NEGOCIO DAS EMPRESAS DAS QUAIS FAZIAM PARTE. SER TER O KNOW HOW
DOS DEMAIS NEGOCIOS, OS PROGRAMADORES PROGRAMAVAM VOLTADOS PARA OS
PROCEDIMENTOS, E ESSE FOI UM ERRO MORTAL.

PETER CHEN, VENDO TODO ESSE CENARIO AFIRMOU: NAO PODEMOS CRIAR BANCOS
DE DADOS VOLTADOS PARA PROCEDIMENTOS EMPRESARIAIS, POIS OS PROCEDIMENTOS
SOFREM INTERFERENCIAS EXTERNAS E PODEM SER ALTERADOS. A UNICA COISA
QUE NAO SOFRE ALTERACAO SAO OS DADOS.

POR EXEMPLO, ARMAZENAMOS NO BANCO A VENDA DE JANEIRO, FEVEREIRO E MARCO
O TOTAL DAS VENDAS E O IMPOSTO PAGO AO GOVERNO. 
FAZEMOS ISSO DURANTE MUITO TEMPO. DE UMA HORA PRA OUTRA O GOVERNO
MUDA A ALIQUOTA DO IMPOSTO. COMO FARÁ SENTIDO OS PAGAMENTOS ARMAZENADOS
ANTERIORMENTE? AQUI NOTA-SE QUE ARMAZENAMOS DADOS E ARMAZENAMOS
INFORMACOES CORRESPONDENTES AOS PROCEDIMENTOS EXTERNOS. DEVEMOS
APENAS ARMAZENAR OS DADOS, POIS ELES SAO SUFICIENTES PARA GERAR
A INFORMACAO.

MODELAR É UMA ARTE, ALGO QUE SE APRENDE COM A PRATICA. E VOCES PODEM
SE PERGUNTAR: MAS SE É ALGO QUE SE APRENDE COM A PRATICA, COMO QUEM
ESTA COMEÇANDO, APRENDE?

ASSIM COMO PETER CHEN CRIOU O MODELO DE ENTIDADE E RELACIONAMENTO, O MER,
FORAM CRIADAS FORMAS NORMAIS, QUE SAO DIRETRIZES PARA APLICAR EM
MODELAGEM DE AMBIENTES OLTP OU AMBIENTES TRANSACIONAIS DE BANCOS
DE DADOS.

HOJE TEMOS MAIS DO QUE 3 FORMAS NORMAIS, MAS AO NORMALIZARMOS UM
BANCO ATE A SUA TERCEIRA FORMA, É O SUFICIENTE PARA TER UM
TRABALHO LIMPO E LIVRE DE ERROS. VEREMOS AS TRES FORMAS NORMAIS,
UMA A UMA, DETALHADAMENTE NAS PROXIMAS AULAS.
*/

INSERT INTO CLIENTE VALUES('CARLA','F','C.LOPES@UOL.COM',45638854,'9301-7585','RUA COPPER LEAF - WILLIAMBURG - KITCHENER');

SELECT SEXO, COUNT(*) AS QTD FROM CLIENTE GROUP BY SEXO;

/* PRIMEIRA FORMA NORMAL */

/*

1 - TODO O CAMPO VETORIZADO SE TORNAR A OUTRA TABELA 

[AMARELO, AZUL, LARANJA, VERDE] -> CORES
[KA, FIESTA, UNO, CIVIC] -> CARROS

2 - TODO O CAMPO MULTIVALORADO SE TORNA A OUTRA TABELA. 
QUANDO O CAMPO FOR DIVISIVEL

3 - TODA A TABELA NECESSITA DE PELOMENOS UM CAMPO IDENTIFIQUE TODO O REGISTRO COMO SENDO UNICO.
ISSO E O QUE CHAMAMOS DE CHAVE PRIMARIA OU PRIMARY KEY.

*/

/* CADINALIDADE */

/*QUEM DEFINE A CADINALIDADE E A REGRA DE NEGOCIOS */

/*PRIMEIRO ALGARISMO - OBRIGATORIEDADE
0 - NAO OBRIGATORIO
1 - OBRIGATORIO

SEGUNDA ALGARISMO - CARDINALIDADE 
1 - MAXIMA DE 1
N - MAS DE 1
*/

CREATE DATABASE COMERCIO;

USE COMERCIO;

SHOW DATABASES; --> OPCIONAL

DROP TABLE CLIENTE;

CREATE TABLE CLIENTE(
	IDCLIENTE INT PRIMARY KEY AUTO_INCREMENT,
	NOME VARCHAR(30) NOT NULL,
	SEXO ENUM('M','F') NOT NULL,
	EMAIL VARCHAR(50) UNIQUE,
	CPF VARCHAR(15) UNIQUE
);

CREATE TABLE ENDERECO(
	IDENDERECO INT PRIMARY KEY AUTO_INCREMENT,
	RUA VARCHAR(30) NOT NULL,
	BAIRRO VARCHAR(30) NOT NULL,
	CIDADE VARCHAR(30) NOT NULL,
	ESTADO CHAR(2) NOT NULL,
	ID_CLIENTE INT UNIQUE,
	
	FOREIGN KEY(ID_CLIENTE)
	REFERENCES CLIENTE(IDCLIENTE)
);

CREATE TABLE TELEFONE(
	IDTELEFONE INT PRIMARY KEY AUTO_INCREMENT,
	TIPO ENUM('RES','COM','CEL') NOT NULL,
	NUMERO VARCHAR(10) NOT NULL,
	ID_CLIENTE INT,
	
	FOREIGN KEY (ID_CLIENTE)
	REFERENCES CLIENTE(IDCLIENTE)
);

/*ENDERECO - OBRIGATORIO CADASTRO DE SOMENTE 1.

TELEFONE - NAO OBRIGATORIO CADASTRO DE MAS DE 1 (OPCIONAL) */

/* CHAVE ESTRANGEIRA E CHAVE PRIMARIA DE UMA TABELA QUE VAI ATE A OUTRA TABELA PARA FAZER REFERENCIA ENTRE REGISTROS */

/* EM RELACIONAMENTOS 1 X 1 A CHAVE ESTRANGEIRA FICA NA TABELA MAIS FRACA */

/* EM RELACIONAMENTO DE 1 X N A CHAVE ESTRANGEIRA FICA SEMPRE NA CARDINALIDADE N */

DESC CLIENTE;

INSERT INTO CLIENTE VALUES(NULL,'JOAO','M','JOAO@IG.COM','52145604');

INSERT INTO CLIENTE VALUES(NULL,'CARLOS','M','CARLOS@IG.COM','54844184');

INSERT INTO CLIENTE VALUES(NULL,'ANA','F','ANA@IG.COM','54846546');

INSERT INTO CLIENTE VALUES(NULL,'CLARA','F',NULL,'54864651');

INSERT INTO CLIENTE VALUES(NULL,'JORGE','M','JORGE@IG.COM','54846816');

INSERT INTO CLIENTE VALUES(NULL,'CELIA','M','JCELIA@IG.COM','56484984');

SELECT * FROM CLIENTE;

+-----------+--------+------+---------------+----------+
| IDCLIENTE | NOME   | SEXO | EMAIL         | CPF      |
+-----------+--------+------+---------------+----------+
|         1 | JOAO   | M    | JOAO@IG.COM   | 52145604 |
|         2 | CARLOS | M    | CARLOS@IG.COM | 54844184 |
|         3 | ANA    | F    | ANA@IG.COM    | 54846546 |
|         4 | CLARA  | F    | NULL          | 54864651 |
|         5 | JORGE  | M    | JORGE@IG.COM  | 54846816 |
|         6 | CELIA  | M    | JCELIA@IG.COM | 56484984 |
+-----------+--------+------+---------------+----------+

DESC ENDERECO;

INSERT INTO ENDERECO VALUES(NULL,'RUA ANTONIO SA','CENTRO','B.HORIZONTE','MG',4);

INSERT INTO ENDERECO VALUES(NULL,'RUA CAPITAO HERMES','CENTRO','RIO DE JANEIRO','RJ',1);

INSERT INTO ENDERECO VALUES(NULL,'RUA PRES VAGAS','JARDINS','SAO PAULO','SP',3);

INSERT INTO ENDERECO VALUES(NULL,'RUA ALFANDEGA','ESTACIO','RIO DE JANEIRO','RJ',2);

INSERT INTO ENDERECO VALUES(NULL,'RUA DO OUVIDOR','FLAMENGO','RIO DE JANEIRO','RJ',6);

INSERT INTO ENDERECO VALUES(NULL,'RUA URUGUAIANA','CENTRO','VITORIA','ES',5);

INSERT INTO ENDERECO VALUES(NULL,'RUA ALFANDEGA','CENTRO','SAO PAULO','SP',5);

SELECT * FROM ENDERECO;

DESC TELEFONE;

INSERT INTO TELEFONE VALUES (NULL,'CEL','5484-1810',5);

INSERT INTO TELEFONE VALUES (NULL,'RES','8285-3852',5);

INSERT INTO TELEFONE VALUES (NULL,'CEL','9291-2923',1);

INSERT INTO TELEFONE VALUES (NULL,'COM','8419-2968',2);

INSERT INTO TELEFONE VALUES (NULL,'RES','9634-1981',1);

INSERT INTO TELEFONE VALUES (NULL,'CEL','8287-1953',3);

INSERT INTO TELEFONE VALUES (NULL,'CEL','8129-8126',3);

INSERT INTO TELEFONE VALUES (NULL,'COM','5985-1415',1);

INSERT INTO TELEFONE VALUES (NULL,'COM','3518-6448',5);

INSERT INTO TELEFONE VALUES (NULL,'CEL','7896-5416',2);

SELECT * FROM TELEFONE;

/* SELECAO, PROJECAO E JUNCAO */

/* PROJECAO -> E TUDO O QUE VOCE QUER VER NA TELA */

SELECT NOW() AS DATA_ATUAL;

SELECT 2 + 2 AS SOMA;

SELECT 2 = 2 AS SOMA, NOME, NOW() FROM CLIENTE;

/* SELECAO - > E UM SUBCONJUNTO DO CONJUNTO DE REGISTRO DE UMA TABELA 
A CLAUSULA DE SELECAO E O WHERE */

SELECT NOME, SEXO, EMAIL FROM CLIENTE WHERE SEXO = 'F';

SELECT NOME, SEXO, EMAIL --PROJECAO
FROM CLIENTE --ORIGEM
WHERE SEXO = 'F' -- SELECAO

SELECT NUMERO FROM TELEFONE WHERE TIPO = 'CEL';

SELECT NUMERO --PROJECAO
FROM TELEFONE --ORIGEM
WHERE TIPO = 'CEL' --SELECAO

/* JUNCAO -> JOIN */

SELECT NOME, EMAIL, IDCLIENTE FROM CLIENTE;

SELECT ID_CLIENTE, BAIRRO, CIDADE FROM ENDERECO;

+--------+---------------+-----------++------------+----------+----------------+
| NOME   | EMAIL         | IDCLIENTE || ID_CLIENTE | BAIRRO   | CIDADE         |
+--------+---------------+-----------++------------+----------+----------------+
| JOAO   | JOAO@IG.COM   |         1 ||          1 | CENTRO   | RIO DE JANEIRO |
| CARLOS | CARLOS@IG.COM |         2 ||          2 | ESTACIO  | RIO DE JANEIRO |
| ANA    | ANA@IG.COM    |         3 ||          3 | JARDINS  | SAO PAULO      |
| CLARA  | NULL          |         4 ||          4 | CENTRO   | B.HORIZONTE    |
| JORGE  | JORGE@IG.COM  |         5 ||          5 | CENTRO   | VITORIA        |
| CELIA  | JCELIA@IG.COM |         6 ||          6 | FLAMENGO | RIO DE JANEIRO |
+--------+---------------+-----------++------------+----------+----------------+

/* NOME, SEXO, BAIRRO, CIDADE */

SELECT NOME, SEXO, BAIRRO, CIDADE FROM CLIENTE, ENDERECO WHERE IDCLIENTE = ID_CLIENTE;

SELECT NOME, SEXO, BAIRRO, CIDADE --PROJECAO 
FROM CLIENTE, ENDERECO --ORIGEM
WHERE IDCLIENTE = ID_CLIENTE --JUNCAO

+--------+------+----------+----------------+
| NOME   | SEXO | BAIRRO   | CIDADE         |
+--------+------+----------+----------------+
| JOAO   | M    | CENTRO   | RIO DE JANEIRO |
| CARLOS | M    | ESTACIO  | RIO DE JANEIRO |
| ANA    | F    | JARDINS  | SAO PAULO      |
| CLARA  | F    | CENTRO   | B.HORIZONTE    |
| JORGE  | M    | CENTRO   | VITORIA        |
| CELIA  | M    | FLAMENGO | RIO DE JANEIRO |
+--------+------+----------+----------------+

/* WHERE = SELECAO */

SELECT NOME, SEXO, BAIRRO, CIDADE FROM CLIENTE, ENDERECO WHERE IDCLIENTE = ID_CLIENTE AND SEXO = 'F';

+-------+------+---------+-------------+
| NOME  | SEXO | BAIRRO  | CIDADE      |
+-------+------+---------+-------------+
| ANA   | F    | JARDINS | SAO PAULO   |
| CLARA | F    | CENTRO  | B.HORIZONTE |
+-------+------+---------+-------------+

/* HERE IDCLIENTE = ID_CLIENTE 
AND SEXO = 'F' = TABELA VERDADE */

INSERT INTO ENDERECO VALUES(NULL,'RUA ANTONIO SA','CENTRO','B.HORIZONTE','MG',15);

SELECT NOME, SEXO, BAIRRO, CIDADE FROM CLIENTE INNER JOIN ENDERECO ON IDCLIENTE = ID_CLIENTE;

+--------+------+----------+----------------+
| NOME   | SEXO | BAIRRO   | CIDADE         |
+--------+------+----------+----------------+
| JOAO   | M    | CENTRO   | RIO DE JANEIRO |
| CARLOS | M    | ESTACIO  | RIO DE JANEIRO |
| ANA    | F    | JARDINS  | SAO PAULO      |
| CLARA  | F    | CENTRO   | B.HORIZONTE    |
| JORGE  | M    | CENTRO   | VITORIA        |
| CELIA  | M    | FLAMENGO | RIO DE JANEIRO |
+--------+------+----------+----------------+

SELECT NOME, SEXO, BAIRRO, CIDADE FROM CLIENTE INNER JOIN ENDERECO ON IDCLIENTE = ID_CLIENTE WHERE SEXO ='F';

SELECT NOME, SEXO, BAIRRO, CIDADE --PROJECAO
FROM CLIENTE --ORIGEM
	INNER JOIN ENDERECO --JUNCAO
	ON IDCLIENTE = ID_CLIENTE
WHERE SEXO ='F'; --SELECAO

/* NOME, SEXO, EMAIL ,TIPO, NUMERO */

SELECT NOME, SEXO, EMAIL, TIPO, NUMERO FROM CLIENTE INNER JOIN TELEFONE ON IDCLIENTE = ID_CLIENTE;

/* NOME, SEXO, BAIRRO, CIDADE, TIPO, NUMERO */

SELECT CLIENTE.NOME, CLIENTE.SEXO, ENDERECO.BAIRRO, ENDERECO.CIDADE, TELEFONE.TIPO, TELEFONE.NUMERO FROM CLIENTE INNER JOIN ENDERECO ON CLIENTE.IDCLIENTE = ENDERECO.ID_CLIENTE INNER JOIN TELEFONE ON CLIENTE.IDCLIENTE = TELEFONE.ID_CLIENTE;

+--------+------+---------+----------------+------+-----------+
| NOME   | SEXO | BAIRRO  | CIDADE         | TIPO | NUMERO    |
+--------+------+---------+----------------+------+-----------+
| JOAO   | M    | CENTRO  | RIO DE JANEIRO | CEL  | 9291-2923 |
| JOAO   | M    | CENTRO  | RIO DE JANEIRO | RES  | 9634-1981 |
| JOAO   | M    | CENTRO  | RIO DE JANEIRO | COM  | 5985-1415 |
| CARLOS | M    | ESTACIO | RIO DE JANEIRO | COM  | 8419-2968 |
| CARLOS | M    | ESTACIO | RIO DE JANEIRO | CEL  | 7896-5416 |
| ANA    | F    | JARDINS | SAO PAULO      | CEL  | 8287-1953 |
| ANA    | F    | JARDINS | SAO PAULO      | CEL  | 8129-8126 |
| JORGE  | M    | CENTRO  | VITORIA        | CEL  | 5484-1810 |
| JORGE  | M    | CENTRO  | VITORIA        | RES  | 8285-3852 |
| JORGE  | M    | CENTRO  | VITORIA        | COM  | 3518-6448 |
+--------+------+---------+----------------+------+-----------+

SELECT CLIENTE.NOME, CLIENTE.SEXO, ENDERECO.BAIRRO, ENDERECO.CIDADE, TELEFONE.TIPO, TELEFONE.NUMERO FROM CLIENTE INNER JOIN ENDERECO ON CLIENTE.IDCLIENTE = ENDERECO.ID_CLIENTE INNER JOIN TELEFONE ON CLIENTE.IDCLIENTE = TELEFONE.ID_CLIENTE;

+--------+------+---------+----------------+------+-----------+
| NOME   | SEXO | BAIRRO  | CIDADE         | TIPO | NUMERO    |
+--------+------+---------+----------------+------+-----------+
| JOAO   | M    | CENTRO  | RIO DE JANEIRO | CEL  | 9291-2923 |
| JOAO   | M    | CENTRO  | RIO DE JANEIRO | RES  | 9634-1981 |
| JOAO   | M    | CENTRO  | RIO DE JANEIRO | COM  | 5985-1415 |
| CARLOS | M    | ESTACIO | RIO DE JANEIRO | COM  | 8419-2968 |
| CARLOS | M    | ESTACIO | RIO DE JANEIRO | CEL  | 7896-5416 |
| ANA    | F    | JARDINS | SAO PAULO      | CEL  | 8287-1953 |
| ANA    | F    | JARDINS | SAO PAULO      | CEL  | 8129-8126 |
| JORGE  | M    | CENTRO  | VITORIA        | CEL  | 5484-1810 |
| JORGE  | M    | CENTRO  | VITORIA        | RES  | 8285-3852 |
| JORGE  | M    | CENTRO  | VITORIA        | COM  | 3518-6448 |
+--------+------+---------+----------------+------+-----------+

/*
		DML - DATA MANIPULATION LANGUAGE
		DDL - DATA DEFINITION LANGUAGE
		DCL - DATA CONTROLE LANGUAGE
		TCL - TRANSACTION CONTROL LANGUAGE
*/

/* INSERT */

INSERT INTO CLIENTE VALUES(NULL,'PAULA','M',NULL,'44352186');
INSERT INTO ENDERECO VALUES(NULL,'RUA JOAQUIM SILVA','ALVORADA','NITEROI','RJ',7);

SELECT * FROM CLIENTE;

/* FILTRO */

SELECT * FROM CLIENTE WHERE SEXO = 'M';

/* UPDATE */

SELECT * FROM CLIENTE WHERE IDCLIENTE = 7;

UPDATE CLIENTE SET SEXO = 'F' WHERE IDCLIENTE =7;

/* DELETE */

INSERT INTO CLIENTE VALUES(NULL,'XXX','M',NULL,'XXX');

SELECT * FROM CLIENTE WHERE IDCLIENTE = 8;

DELETE FROM CLIENTE WHERE IDCLIENTE = 8;

/* DDL - DATA DEFINITION LANGUAGE */

CREATE TABLE PRODUTO(
	IDPRODUTO INT PRIMARY KEY AUTO_INCREMENT,
	NOME_PRODUTO VARCHAR(30) NOT NULL,
	PRECO INT,
	FRETE FLOAT(10,2) NOT NULL
);

/* ALTER TABELA */

/* ALTERA O NOME DE UMA COLUNA - CHANGE */

ALTER TABLE PRODUTO CHANGE PRECO VALOR_UNITARIO INT NOT NULL;

DESC PRODUTO;
+----------------+-------------+------+-----+---------+----------------+
| Field          | Type        | Null | Key | Default | Extra          |
+----------------+-------------+------+-----+---------+----------------+
| IDPRODUTO      | int(11)     | NO   | PRI | NULL    | auto_increment |
| NOME_PRODUTO   | varchar(30) | NO   |     | NULL    |                |
| VALOR_UNITARIO | int(11)     | NO   |     | NULL    |                |
| FRETE          | float(10,2) | NO   |     | NULL    |                |
+----------------+-------------+------+-----+---------+----------------+

ALTER TABLE PRODUTO CHANGE VALOR_UNITARIO VALOR_UNITARIO INT;

DESC PRODUTO
+----------------+-------------+------+-----+---------+----------------+
| Field          | Type        | Null | Key | Default | Extra          |
+----------------+-------------+------+-----+---------+----------------+
| IDPRODUTO      | int(11)     | NO   | PRI | NULL    | auto_increment |
| NOME_PRODUTO   | varchar(30) | NO   |     | NULL    |                |
| VALOR_UNITARIO | int(11)     | YES  |     | NULL    |                |
| FRETE          | float(10,2) | NO   |     | NULL    |                |
+----------------+-------------+------+-----+---------+----------------+

/* APAGANDO TABELA */

DROP TABLE PRODUTO;

/* MODIFY - ALTERANDO O TIPO */

ALTER TABLE PRODUTO MODIFY VALOR_UNITARIO VARCHAR(50) NOT NULL;

/* ADICIONANDO COLUNAS */

ALTER TABLE PRODUTO ADD COLUMN PESO FLOAT(10,2) NOT NULL AFTER;

/* APAGANDO UMA COLUNA */

ALTER TABLE PRODUTO DROP COLUMN PESO;

/* ADICIONAMDO UMA COLUNA NA ORDEM ESPECIFICA */

ALTER TABLE PRODUTO ADD COLUMN PESO FLOAT(10,2) NOT NULL AFTER NOME_PRODUTO;

ALTER TABLE PRODUTO DROP COLUMN PESO;

ALTER TABLE PRODUTO ADD COLUMN PESO FLOAT(10,2) NOT NULL FIRST;

*/ EXERCICIOS DML */

INSERT INTO CLIENTE VALUES(NULL,'FLAVIO','M','FLAVIO@IG.COM','34684632');
INSERT INTO CLIENTE VALUES(NULL,'ANDRE','M','ANDRE@GLOBO.COM','28921664');
INSERT INTO CLIENTE VALUES(NULL,'GIOVANA','F',NULL,'36878873');
INSERT INTO CLIENTE VALUES(NULL,'KARLA','F','KARLA@GMAIL.COM','76448328');
INSERT INTO CLIENTE VALUES(NULL,'DANIELE','M','DANIELE@GMAIL.COM','69762128');
INSERT INTO CLIENTE VALUES(NULL,'LORENA','M',NULL,'64621813');
INSERT INTO CLIENTE VALUES(NULL,'EDUARDO','M',NULL,'98218618');
INSERT INTO CLIENTE VALUES(NULL,'ANTONIO','F','ANTONIO@IG.COM','28467651');
INSERT INTO CLIENTE VALUES(NULL,'ANTONIO','M','ANTONIO@UOL.COM','39754186');
INSERT INTO CLIENTE VALUES(NULL,'ELAINE','M','ELAINE@GLOBO','68746876');
INSERT INTO CLIENTE VALUES(NULL,'CARMEM','M','CARMEM@IG.COM','78646531');
INSERT INTO CLIENTE VALUES(NULL,'ADRIANA','F','ADRIANA@GMAIL.COM','84354518');
INSERT INTO CLIENTE VALUES(NULL,'JOICE','F','JOICE@GMAIL.COM','86135321');


/* CADASTRA UM ENDERECO PARA CADA CLIENTE */

INSERT INTO ENDERECO VALUES(NULL,'RUA GUEDES','CASCADURA','B. HORIZONT','MG',9);
INSERT INTO ENDERECO VALUES(NULL,'RUA MAIA LACERDA','ESTACIO','RIO DE JANEIRO','RJ',10);
INSERT INTO ENDERECO VALUES(NULL,'RUA VISCONDESSA','CENTRO','RIO DE JANEIRO','RJ',11);
INSERT INTO ENDERECO VALUES(NULL,'RUA NELSON MANDELA','COPACABANA','RIO DE JANEIRO','RJ',12);
INSERT INTO ENDERECO VALUES(NULL,'RUA ARAUJO LIMA','CENTRO','VITORIA','ES',13);
INSERT INTO ENDERECO VALUES(NULL,'RUA CASTRO ALVES','LEBLON','RIO DE JANEIRO','RJ',14);
INSERT INTO ENDERECO VALUES(NULL,'AV CAPITAO ANTUNES','CENTRO','CURITIBA','PR',15);
INSERT INTO ENDERECO VALUES(NULL,'AV CARLOS BARROSO','JARDINS','SAO PAULO','SP',16);
INSERT INTO ENDERECO VALUES(NULL,'ALAMEDA SAMPAIO','BOM RETIRO','CURITIBA','PR',17);
INSERT INTO ENDERECO VALUES(NULL,'RUA DA LAPA','LAPA','SAO PAULO','SP',18);
INSERT INTO ENDERECO VALUES(NULL,'RUA GERONIMO','CENTRO','RIO DE JANEIRO','RJ',19);
INSERT INTO ENDERECO VALUES(NULL,'RUA GOMES FREIRE','CENTRO','RIO DE JANEIRO','RJ',20);
INSERT INTO ENDERECO VALUES(NULL,'RUA GOMES FREIRE','CENTRO','RIO DE JANEIRO','RJ',8);

/* CADASTRA TELEFONE PARA OS CLIENTES */

INSERT INTO TELEFONE VALUES(NULL,'RES','3186-4651',9);
INSERT INTO TELEFONE VALUES(NULL,'CEL','3518-4138',9);
INSERT INTO TELEFONE VALUES(NULL,'CEL','8432-1867',11);
INSERT INTO TELEFONE VALUES(NULL,'RES','4789-8435',11);
INSERT INTO TELEFONE VALUES(NULL,'COM','8465-1846',12);
INSERT INTO TELEFONE VALUES(NULL,'COM','8784-6231',13);
INSERT INTO TELEFONE VALUES(NULL,'CEL','5485-3184',15);
INSERT INTO TELEFONE VALUES(NULL,'COM','8765-1846',16);
INSERT INTO TELEFONE VALUES(NULL,'CEL','8796-5187',17);
INSERT INTO TELEFONE VALUES(NULL,'RES','7894-6518',18);
INSERT INTO TELEFONE VALUES(NULL,'RES','7651-6549',19);
INSERT INTO TELEFONE VALUES(NULL,'CEL','8465-1684',19);
INSERT INTO TELEFONE VALUES(NULL,'RES','8465-1684',20);
INSERT INTO TELEFONE VALUES(NULL,'COM','8465-1684',20);

INSERT INTO TELEFONE VALUES(NULL,'RES','4789-8435',10);
INSERT INTO TELEFONE VALUES(NULL,'COM','5985-1415',14);
INSERT INTO TELEFONE VALUES(NULL,'COM','3518-6448',7);




/* RELATORIO GERAL DE TODOS OS CLIENTES */
/* RELATORIO GERAO DE TODOS OS CLIENTES (TELEFONE E ENDERECO) */

DESC CLIENTE;

+-----------+---------------+------+-----+---------+----------------+
| Field     | Type          | Null | Key | Default | Extra          |
+-----------+---------------+------+-----+---------+----------------+
| IDCLIENTE | int(11)       | NO   | PRI | NULL    | auto_increment |
| NOME      | varchar(30)   | NO   |     | NULL    |                |
| SEXO      | enum('M','F') | NO   |     | NULL    |                |
| EMAIL     | varchar(50)   | YES  | UNI | NULL    |                |
| CPF       | varchar(15)   | YES  | UNI | NULL    |                |
+-----------+---------------+------+-----+---------+----------------+

DESC ENDERECO;

+------------+-------------+------+-----+---------+----------------+
| Field      | Type        | Null | Key | Default | Extra          |
+------------+-------------+------+-----+---------+----------------+
| IDENDERECO | int(11)     | NO   | PRI | NULL    | auto_increment |
| RUA        | varchar(30) | NO   |     | NULL    |                |
| BAIRRO     | varchar(30) | NO   |     | NULL    |                |
| CIDADE     | varchar(30) | NO   |     | NULL    |                |
| ESTADO     | char(2)     | NO   |     | NULL    |                |
| ID_CLIENTE | int(11)     | YES  | UNI | NULL    |                |
+------------+-------------+------+-----+---------+----------------+

DESC TELEFONE;

+------------+-------------------------+------+-----+---------+----------------+
| Field      | Type                    | Null | Key | Default | Extra          |
+------------+-------------------------+------+-----+---------+----------------+
| IDTELEFONE | int(11)                 | NO   | PRI | NULL    | auto_increment |
| TIPO       | enum('RES','COM','CEL') | NO   |     | NULL    |                |
| NUMERO     | varchar(10)             | NO   |     | NULL    |                |
| ID_CLIENTE | int(11)                 | YES  | MUL | NULL    |                |
+------------+-------------------------+------+-----+---------+----------------+

SELECT C.IDCLIENTE, C.NOME, C.SEXO, C.EMAIL, C.CPF, 
	   E.RUA, E.BAIRRO, E.CIDADE, E.ESTADO,
	   T.TIPO, T.NUMERO 
FROM CLIENTE C 
INNER JOIN ENDERECO E
ON C.IDCLIENTE = E.ID_CLIENTE
INNER JOIN TELEFONE T
ON C.IDCLIENTE = T.ID_CLIENTE;

/* RELATORIO DE HOMENS */

SELECT C.IDCLIENTE, C.NOME, C.SEXO, C.EMAIL, C.CPF,
	   E.RUA, E.BAIRRO, E.CIDADE, E.ESTADO,
	   T.TIPO, T.NUMERO
FROM CLIENTE C
INNER JOIN ENDERECO E
ON C.IDCLIENTE = E.ID_CLIENTE
INNER JOIN TELEFONE T
ON C.IDCLIENTE = T.ID_CLIENTE
WHERE SEXO = 'M';

/* 12 13 17 18 */

SELECT * FROM CLIENTE
WHERE IDCLIENTE = 12 
OR IDCLIENTE = 13
OR IDCLIENTE = 17
OR IDCLIENTE = 18;

SELECT * FROM CLIENTE
WHERE IDCLIENTE IN (12,13,17,18);

UPDATE CLIENTE SET SEXO = 'F'
WHERE IDCLIENTE IN (12,13,17,18);

/* RELATORIO DE MULHERES */ 

SELECT C.IDCLIENTE, C.NOME, C.SEXO, C.EMAIL, C.CPF,
	   E.RUA, E.BAIRRO, E.CIDADE, E.ESTADO,
	   T.TIPO, T.NUMERO
FROM CLIENTE C
INNER JOIN ENDERECO E
ON C.IDCLIENTE = E.ID_CLIENTE
INNER JOIN TELEFONE T
ON C.IDCLIENTE = T.ID_CLIENTE
WHERE SEXO = 'F';

UPDATE CLIENTE SET SEXO = 'M'
WHERE IDCLIENTE = 15;

/* QUANTIDADES DE HOMENS E MULHERES */

SELECT COUNT(*) AS QUANTIDADE, SEXO
FROM CLIENTE
GROUP BY SEXO;

+------------+------+
| QUANTIDADE | SEXO |
+------------+------+
|          9 | M    |
|         11 | F    |
+------------+------+

/* IDS E EMAIL DAS MULHERES QUE MOREM NO RIO DE JANEIRO E NAO TENHAM CELULAR */

SELECT C.IDCLIENTE, C.EMAIL, C.NOME, C.SEXO
FROM CLIENTE C
INNER JOIN ENDERECO E
ON C.IDCLIENTE = E.ID_CLIENTE
INNER JOIN TELEFONE T
ON C.IDCLIENTE = T.ID_CLIENTE;

SELECT C.IDCLIENTE, C.EMAIL, C.NOME, C.SEXO
FROM CLIENTE C
INNER JOIN ENDERECO E
ON C.IDCLIENTE = E.ID_CLIENTE
INNER JOIN TELEFONE T
ON C.IDCLIENTE = T.ID_CLIENTE
WHERE SEXO = 'F';

SELECT C.IDCLIENTE, C.EMAIL, C.NOME, C.SEXO
FROM CLIENTE C
INNER JOIN ENDERECO E
ON C.IDCLIENTE = E.ID_CLIENTE
INNER JOIN TELEFONE T
ON C.IDCLIENTE = T.ID_CLIENTE
WHERE SEXO = 'F'
AND BAIRRO = 'CENTRO' AND CIDADE = 'RIO DE JANEIRO';

SELECT C.IDCLIENTE, C.EMAIL, C.NOME, C.SEXO, T.TIPO, E.BAIRRO, E.CIDADE
FROM CLIENTE C
INNER JOIN ENDERECO E
ON C.IDCLIENTE = E.ID_CLIENTE
INNER JOIN TELEFONE T
ON C.IDCLIENTE = T.ID_CLIENTE
WHERE SEXO = 'F'
AND BAIRRO = 'CENTRO' AND CIDADE = 'RIO DE JANEIRO';

+-----------+-------------------+---------+------+------+--------+----------------+
| IDCLIENTE | EMAIL             | NOME    | SEXO | TIPO | BAIRRO | CIDADE         |
+-----------+-------------------+---------+------+------+--------+----------------+
|        11 | KARLA@GMAIL.COM   | KARLA   | F    | CEL  | CENTRO | RIO DE JANEIRO |
|        11 | KARLA@GMAIL.COM   | KARLA   | F    | RES  | CENTRO | RIO DE JANEIRO |
|        11 | KARLA@GMAIL.COM   | KARLA   | F    | COM  | CENTRO | RIO DE JANEIRO |
|        19 | ADRIANA@GMAIL.COM | ADRIANA | F    | RES  | CENTRO | RIO DE JANEIRO |
|        19 | ADRIANA@GMAIL.COM | ADRIANA | F    | CEL  | CENTRO | RIO DE JANEIRO |
|        20 | JOICE@GMAIL.COM   | JOICE   | F    | RES  | CENTRO | RIO DE JANEIRO |
|        20 | JOICE@GMAIL.COM   | JOICE   | F    | COM  | CENTRO | RIO DE JANEIRO |
+-----------+-------------------+---------+------+------+--------+----------------+

SELECT C.IDCLIENTE, C.EMAIL, C.NOME, C.SEXO, T.TIPO, E.BAIRRO, E.CIDADE
FROM CLIENTE C
INNER JOIN ENDERECO E
ON C.IDCLIENTE = E.ID_CLIENTE
INNER JOIN TELEFONE T
ON C.IDCLIENTE = T.ID_CLIENTE
WHERE SEXO = 'F'
AND BAIRRO = 'CENTRO' AND CIDADE = 'RIO DE JANEIRO'
AND TIPO = 'RES' OR TIPO = 'COM';

SELECT C.IDCLIENTE, C.EMAIL, C.NOME, C.SEXO, T.TIPO, E.BAIRRO, E.CIDADE
FROM CLIENTE C
INNER JOIN ENDERECO E
ON C.IDCLIENTE = E.ID_CLIENTE
INNER JOIN TELEFONE T
ON C.IDCLIENTE = T.ID_CLIENTE
WHERE SEXO = 'F'
AND BAIRRO = 'CENTRO' AND CIDADE = 'RIO DE JANEIRO'
AND (TIPO = 'RES' OR TIPO = 'COM');

/* PARAA UMA CAMPANHA DE MARKETING, O SETOR SOLICITOU UM 
RELATORIO COM NOME, EMAIL TELEFONE CELULAR
DOS CLIENTES QUE MOREM NO ESTADO DO RIO DE JANEIRO
VOCE TERA QUE PASSAR A QUERY PARA GERA O RELATORIO PARA O PROGRAMADOR */

SELECT C.NOME, C.EMAIL, T.NUMERO AS CELULAR --PROJECAO
FROM CLIENTE C --ORIGEM
INNER JOIN ENDERECO E --JUNCAO
ON C.IDCLIENTE = E.ID_CLIENTE --JUNCAO CONDICAO
INNER JOIN TELEFONE T --JUNCAO
ON C.IDCLIENTE = T.ID_CLIENTE --JUNCAO CONDICAO
WHERE TIPO = 'CEL' AND ESTADO = 'RJ'; --SELECAO

SELECT C.NOME, C.EMAIL, T.NUMERO AS CELULAR 
FROM CLIENTE C 
INNER JOIN ENDERECO E
ON C.IDCLIENTE = E.ID_CLIENTE
INNER JOIN TELEFONE T
ON C.IDCLIENTE = T.ID_CLIENTE
WHERE TIPO = 'CEL' AND ESTADO = 'RJ'; 

/* PARA UMA CAMPANHA DE PRODUTOS DE BELEZA, O COMERCIANTE SOLICITOU UM
RELATORIO COM NOME, EMAIL TELEFONE CELULAR
DAS MULHERS QUE MOREM NO ESTADO DE SAO PAULO 
VOCE TERA QUE PASSAR A QUERY PARA GERAR O RELATORIO PARA O PROGRAMADOR */

SELECT C.NOME, C.EMAIL, T.NUMERO AS CELULAR 
FROM CLIENTE C
INNER JOIN ENDERECO E
ON C.IDCLIENTE = E.ID_CLIENTE
INNER JOIN TELEFONE T
ON C.IDCLIENTE = T.ID_CLIENTE
WHERE SEXO = 'F'
AND ESTADO = 'SP';

/* NOME EMAIL NUMERO ESTADO */

SELECT C.NOME, C.EMAIL, E.ESTADO, T.NUMERO
FROM CLIENTE C
INNER JOIN ENDERECO E
ON C.IDCLIENTE = E.ID_CLIENTE
INNER JOIN TELEFONE T
ON C.IDCLIENTE = T.ID_CLIENTE;

+---------+-------------------+--------+-----------+
| NOME    | EMAIL             | ESTADO | NUMERO    |
+---------+-------------------+--------+-----------+
| JORGE   | JORGE@IG.COM      | ES     | 5484-1810 |
| JORGE   | JORGE@IG.COM      | ES     | 8285-3852 |
| JOAO    | JOAO@IG.COM       | RJ     | 9291-2923 |
| CARLOS  | CARLOS@IG.COM     | RJ     | 8419-2968 |
| JOAO    | JOAO@IG.COM       | RJ     | 9634-1981 |
| ANA     | ANA@IG.COM        | SP     | 8287-1953 |
| ANA     | ANA@IG.COM        | SP     | 8129-8126 |
| CARLOS  | CARLOS@IG.COM     | RJ     | 7896-5416 |
| ANDRE   | ANDRE@GLOBO.COM   | MG     | 3186-4651 |
| ANDRE   | ANDRE@GLOBO.COM   | MG     | 3518-4138 |
| KARLA   | KARLA@GMAIL.COM   | RJ     | 8432-1867 |
| KARLA   | KARLA@GMAIL.COM   | RJ     | 5746-5186 |
| DANIELE | DANIELE@GMAIL.COM | RJ     | 8465-1846 |
| LORENA  | NULL              | ES     | 8784-6231 |
| ANTONIO | ANTONIO@IG.COM    | PR     | 5485-3184 |
| ANTONIO | ANTONIO@UOL.COM   | SP     | 8765-1846 |
| ELAINE  | ELAINE@GLOBO      | PR     | 8796-5187 |
| CARMEM  | CARMEM@IG.COM     | SP     | 7894-6518 |
| ADRIANA | ADRIANA@GMAIL.COM | RJ     | 7651-6549 |
| ADRIANA | ADRIANA@GMAIL.COM | RJ     | 8465-1684 |
| JOICE   | JOICE@GMAIL.COM   | RJ     | 8465-1684 |
| JOICE   | JOICE@GMAIL.COM   | RJ     | 8465-1684 |
| GIOVANA | NULL              | RJ     | 4789-8435 |
| EDUARDO | NULL              | RJ     | 5985-1415 |
| PAULA   | NULL              | RJ     | 3518-6448 |
+---------+-------------------+--------+-----------+

IFNULL()

SELECT C.NOME,
				IFNULL(C.EMAIL,'NAO TEM EMAIL'),
				E.ESTADO, 
				T.NUMERO
FROM CLIENTE C
INNER JOIN ENDERECO E
ON IDCLIENTE = E.ID_CLIENTE
INNER JOIN TELEFONE T
ON C.IDCLIENTE = T.ID_CLIENTE;

SELECT C.NOME,
				IFNULL(C.EMAIL,'**************'),
				E.ESTADO, 
				T.NUMERO
FROM CLIENTE C
INNER JOIN ENDERECO E
ON IDCLIENTE = E.ID_CLIENTE
INNER JOIN TELEFONE T
ON C.IDCLIENTE = T.ID_CLIENTE; 

+---------+----------------------------------+--------+-----------+
| JORGE   | JORGE@IG.COM                     | ES     | 5484-1810 |
| JORGE   | JORGE@IG.COM                     | ES     | 8285-3852 |
| JOAO    | JOAO@IG.COM                      | RJ     | 9291-2923 |
| CARLOS  | CARLOS@IG.COM                    | RJ     | 8419-2968 |
| JOAO    | JOAO@IG.COM                      | RJ     | 9634-1981 |
| ANA     | ANA@IG.COM                       | SP     | 8287-1953 |
| ANA     | ANA@IG.COM                       | SP     | 8129-8126 |
| CARLOS  | CARLOS@IG.COM                    | RJ     | 7896-5416 |
| ANDRE   | ANDRE@GLOBO.COM                  | MG     | 3186-4651 |
| ANDRE   | ANDRE@GLOBO.COM                  | MG     | 3518-4138 |
| KARLA   | KARLA@GMAIL.COM                  | RJ     | 8432-1867 |
| KARLA   | KARLA@GMAIL.COM                  | RJ     | 5746-5186 |
| DANIELE | DANIELE@GMAIL.COM                | RJ     | 8465-1846 |
| LORENA  | **************                   | ES     | 8784-6231 |
| ANTONIO | ANTONIO@IG.COM                   | PR     | 5485-3184 |
| ANTONIO | ANTONIO@UOL.COM                  | SP     | 8765-1846 |
| ELAINE  | ELAINE@GLOBO                     | PR     | 8796-5187 |
| CARMEM  | CARMEM@IG.COM                    | SP     | 7894-6518 |
| ADRIANA | ADRIANA@GMAIL.COM                | RJ     | 7651-6549 |
| ADRIANA | ADRIANA@GMAIL.COM                | RJ     | 8465-1684 |
| JOICE   | JOICE@GMAIL.COM                  | RJ     | 8465-1684 |
| JOICE   | JOICE@GMAIL.COM                  | RJ     | 8465-1684 |
| GIOVANA | **************                   | RJ     | 4789-8435 |
| EDUARDO | **************                   | RJ     | 5985-1415 |
| PAULA   | **************                   | RJ     | 3518-6448 |
+---------+----------------------------------+--------+-----------+

SELECT C.NOME,
				IFNULL(C.EMAIL,'**************') AS "E-MAIL",
				E.ESTADO, 
				T.NUMERO
FROM CLIENTE C
INNER JOIN ENDERECO E
ON IDCLIENTE = E.ID_CLIENTE
INNER JOIN TELEFONE T
ON C.IDCLIENTE = T.ID_CLIENTE;

/* VIEW */

SELECT C.NOME, C.SEXO, C.EMAIL, 
	   T.TIPO, T.NUMERO, 
	   E.BAIRRO, E.CIDADE, E.ESTADO
FROM CLIENTE C
INNER JOIN TELEFONE T
ON C.IDCLIENTE = T.ID_CLIENTE
INNER JOIN ENDERECO E
ON C.IDCLIENTE = E.ID_CLIENTE;

CREATE VIEW RELATORIO AS 
SELECT C.NOME, C.SEXO, C.EMAIL, 
	   T.TIPO, T.NUMERO, 
	   E.BAIRRO, E.CIDADE, E.ESTADO
FROM CLIENTE C
INNER JOIN TELEFONE T
ON C.IDCLIENTE = T.ID_CLIENTE
INNER JOIN ENDERECO E
ON C.IDCLIENTE = E.ID_CLIENTE;

SELECT * FROM RELATORIO;

SHOW TABLES;
SHOW DATABASES;
SHOW VIEW; --NAO EXISTE

/* APAGANDO UMA VIEW */

DROP VIEW RELATORIO;

/* INSERINDO UM PREFIXO */

CREATE VIEW V_RELATORIO AS 
SELECT C.NOME, C.SEXO, IFNULL(C.EMAIL,'CLIENTE SEM EMAIL') AS "E-MAIL", 
	   T.TIPO, T.NUMERO, 
	   E.BAIRRO, E.CIDADE, E.ESTADO
FROM CLIENTE C
INNER JOIN TELEFONE T
ON C.IDCLIENTE = T.ID_CLIENTE
INNER JOIN ENDERECO E
ON C.IDCLIENTE = E.ID_CLIENTE;

SELECT NOME, NUMERO, ESTADO
FROM V_RELATORIO;

/* UPDATE, INSERINDO E DELETANDO - DML */

INSERT INTO V_RELATORIO 
	VALUES('ANDREIA','F','ANDREIA@UOL.COM','87451384','CENTRO','VITORIA','ES');

ERROR 1394 (HY000): Can not insert into join view 'comercio.v_relatorio' without fields list

DELETE FROM V_RELATORIO WHERE NOME = 'JORGE';

ERROR 1395 (HY000): Can not delete from join view 'comercio.v_relatorio'

/* E PERMETIDO FAZER UPDATE EM UMA VIEW COM JOIN */

UPDATE V_RELATORIO SET NOME = 'JOSE' WHERE NOME = 'JORGE';

CREATE TABLE JOGADORES(
		IDJOGADORE INT,
		NOME VARCHAR(30),
		ESTADO CHAR(2)
);

DESC JOGADORES;

INSERT INTO JOGADORES VALUES(1,'GUERREIRO','RS');
INSERT INTO JOGADORES VALUES(2,'GABIGOL','RJ');
INSERT INTO JOGADORES VALUES(3,'GANSO','RJ');
INSERT INTO JOGADORES VALUES(4,'NENE','RJ');
INSERT INTO JOGADORES VALUES(5,'LOVE','SP');

CREATE VIEW V_JOGADORES AS
SELECT NOME, ESTADO
FROM JOGADORES;

SELECT * FROM JOGADORES;

DELETE FROM V_JOGADORES
WHERE NOME = 'GUERREIRO';

INSERT INTO V_JOGADORES VALUES('GUERREIRO','RS');

SELECT * FROM JOGADORES;

+------------+-----------+--------+
| IDJOGADORE | NOME      | ESTADO |
+------------+-----------+--------+
|          2 | GABIGOL   | RJ     |
|          3 | GANSO     | RJ     |
|          4 | NENE      | RJ     |
|          5 | LOVE      | SP     |
|       NULL | GUERREIRO | RS     |
+------------+-----------+--------+

SELECT * FROM V_RELATORIO
WHERE SEXO = 'F';

/* ORDER BY */

CREATE TABLE ALUNOS(
	NUMERO INT,
	NOME VARCHAR(30)
);

INSERT INTO ALUNOS VALUES(1,'JOAO');
INSERT INTO ALUNOS VALUES(1,'MARIA');
INSERT INTO ALUNOS VALUES(2,'ZOE');
INSERT INTO ALUNOS VALUES(2,'ANDRE');
INSERT INTO ALUNOS VALUES(3,'CLARA');
INSERT INTO ALUNOS VALUES(1,'CLARA');
INSERT INTO ALUNOS VALUES(4,'MAFRA');
INSERT INTO ALUNOS VALUES(5,'JANAINA');
INSERT INTO ALUNOS VALUES(1,'JANAINA');
INSERT INTO ALUNOS VALUES(3,'MARCELO');
INSERT INTO ALUNOS VALUES(4,'GIOVANI');
INSERT INTO ALUNOS VALUES(5,'ANTONIO');
INSERT INTO ALUNOS VALUES(6,'ANA');
INSERT INTO ALUNOS VALUES(6,'VIVIANE');

SELECT * FROM ALUNOS
ORDER BY NUMERO;

SELECT * FROM ALUNOS
ORDER BY 1;

SELECT * FROM ALUNOS
ORDER BY 2;

/* ORDENAR POR MAIS DE UMA COLUNA */

SELECT * FROM ALUNOS
ORDER BY 1;

SELECT * FROM ALUNOS
ORDER BY NUMERO, NOME;

SELECT * FROM ALUNOS
ORDER BY 1, 2;

/* MESCLAR ORDER BY COM PROJECAO */

SELECT NOME FROM ALUNOS
ORDER BY 1, 2;

SELECT NOME FROM ALUNOS
ORDER BY NUMERO, NOME;

/* ORDER BY DESC / ASC */

SELECT * FROM ALUNOS
ORDER BY 1, 2;

SELECT * FROM ALUNOS
ORDER BY 1 ASC;

SELECT * FROM ALUNOS
ORDER BY 1 DESC;

SELECT * FROM ALUNOS
ORDER BY 1, 2 DESC;

SELECT * FROM ALUNOS
ORDER BY 1 DESC, 2 DESC;

/* ORDENANDO COM JOIN */

SELECT C.NOME, C.SEXO, IFNULL(C.EMAIL,'CLIENTE SEM EMAIL') AS "E-MAIL", 
	   T.TIPO, T.NUMERO, 
	   E.BAIRRO, E.CIDADE, E.ESTADO
FROM CLIENTE C
INNER JOIN TELEFONE T
ON C.IDCLIENTE = T.ID_CLIENTE
INNER JOIN ENDERECO E
ON C.IDCLIENTE = E.ID_CLIENTE
ORDER BY 1;

SHOW TABLES;

SELECT * FROM V_RELATORIO
ORDER BY 1;

/* DELIMITADOR */

SELECT C.NOME, C.SEXO, IFNULL(C.EMAIL,'CLIENTE SEM EMAIL') AS "E-MAIL", 
	   T.TIPO, T.NUMERO, 
	   E.BAIRRO, E.CIDADE, E.ESTADO
FROM CLIENTE C
INNER JOIN TELEFONE T
ON C.IDCLIENTE = T.ID_CLIENTE
INNER JOIN ENDERECO E
ON C.IDCLIENTE = E.ID_CLIENTE
ORDER BY 1;

STATUS

DELIMITER $

SELECT * FROM V_RELATORIO;

DELIMITER @
DELIMITER@
DELIMITER @ @
DELIMITER ;

/* STORED PROCEDURES */

SELECT 'MAFRA';

DELIMITER $

CREATE PROCEDURE NOME()
BEGIN
	QUALQUER PROGRAMACAO;
END 
$

CREATE PROCEDURE NOME_EMPRESA()
BEGIN
	SELECT 'UNIVERSIDADE DOS DADOS' AS EMPRESA;
END
$

/* CHAMANDO UM PROCEDURE */

CALL NOME_EMPRESA()$

DELIMITER ;

CALL NOME_EMPRESA();

/* PROCEDURE COM PARAMETROS */

SELECT 10 + 10 AS CONTAS;

DELIMITER $

CREATE PROCEDURE CONTA()
BEGIN
	SELECT 10 + 10 AS CONTA;
END 
$

DROP PROCEDURE CONTA$
DELIMITER $ 

CREATE PROCEDURE CONTA(NUMERO1 INT, NUMERO2 INT)
BEGIN
	SELECT NUMERO1 + NUMERO2 AS CONTA;
END
$

CALL CONTA(100,50)$
CALL CONTA(345634,4354)$
CALL CONTA(55654,56760)$
CALL CONTA(45646,6766)$

/* RECAP */

CREATE DATABASE MAFRA;

USE MAFRA;

CREATE TABLE ALUNOS(
	NUMERO INT,
	NOME VARCHAR(30)
);

DROP DATABASE COMERCIO;
DROP DATABASE EXEMPLO;
DROP DATABASE MAFRA;
DROP DATABASE PROJETO;
DROP DATABASE LIVRARIA;
DROP DATABASE EXERCICIO;



/* PROCEDURE */

CREATE DATABASE PROJETO;

USE PROJETO;

CREATE TABLE CURSOS(
	IDCURSO INT PRIMARY KEY AUTO_INCREMENT,
	NOME VARCHAR(30) NOT NULL,
	HORAS INT(3) NOT NULL,
	VALOR FLOAT(10,2) NOT NULL
);

INSERT INTO CURSOS VALUES(NULL,'JAVA',30,500.00);
INSERT INTO CURSOS VALUES(NULL,'FUNDAMENTOS DE BANCOS DE DADOS',40,700.00);

SELECT * FROM CURSOS;

DELIMITER #

STATUS

CREATE PROCEDURE CAD_CURSOS(P_NOME VARCHAR(30),
							P_HORAS INT(30),
							P_PRECO FLOAT(10,2))
BEGIN
	INSERT INTO CURSOS VALUES(NULL,P_NOME,P_HORAS,P_PRECO);
END
#

DELIMITER ;

CALL CAD_CURSOS('BI SQL SERVER',35,3000.00);
CALL CAD_CURSOS('POWER BI',20,1000.00);
CALL CAD_CURSOS('TABLEAU',30,1200.00);

/* CRIANDO UM PROCEDURE PARA CONSULTAR CURSOS */

/* QUANTIDADES DE HOMENS E MULHERS */

/* IDS E EMAIL DAS MULHERES QUE MOREM NO CENTRO DO RIO DE JANEIRO E NAO TENHAO CELULAR */

/*=======================================================================*/
/*=======================================================================*/
/*=======================================================================*/
/*=======================================================================*/
/*=======================================================================*/
/* Versao 2019-Continuaçao do curso - Obrigado por ficar comigo até aqui!*/
/*=======================================================================*/
/*=======================================================================*/
/*=======================================================================*/
/*=======================================================================*/
/*=======================================================================*/

/* A29 FUNCOES DE AGREGACAO NUMERICAS */

CREATE TABLE VENDEDORES (
	IDVENDEDORES INT PRIMARY KEY AUTO_INCREMENT,
	NOME VARCHAR(30),
	SEXO CHAR(1),
	JANEIRO FLOAT(10,2),
	FERVEREIRO FLOAT(10,2),
	MARCO FLOAT(10,2)
);

INSERT INTO VENDEDORES VALUES(NULL,'CARLOS','M',35435.13,2135.43,65431.90);
INSERT INTO VENDEDORES VALUES(NULL,'MARIA','F',6547.61,38764.31,38746.90);
INSERT INTO VENDEDORES VALUES(NULL,'ANTONIO','M',654867.31,384.76,84321.90);
INSERT INTO VENDEDORES VALUES(NULL,'CLARA','F',35464.61,3215.48,64351.90);
INSERT INTO VENDEDORES VALUES(NULL,'ANDERSON','M',8432.16,68431.38,74354.90);
INSERT INTO VENDEDORES VALUES(NULL,'IVONE','F',4843.21,68743.13,21843.90);
INSERT INTO VENDEDORES VALUES(NULL,'JOAO','M',78545.47,6513.51,86468.90);
INSERT INTO VENDEDORES VALUES(NULL,'CELIA','F',5486.47,31846.88,64351.90);

/* MAX - TRAZ UM VALOR MAXIMO DE UMA COLUNA */

SELECT MAX(FERVEREIRO) AS MAIOR_FEV
FROM VENDEDORES;

/* MIN - TRAZ O VALOR MINIMO DE UMA COLUNA */

SELECT MIN(FERVEREIRO) AS MENOR_FEV
FROM VENDEDORES;

/* AVG - TRAZ UM VALOR MEDIO DE UMA COLUNA */

SELECT AVG(FERVEREIRO) AS MEDIA_FEV
FROM VENDEDORES;

/* VARIAS FUNCOES */

SELECT MAX(JANEIRO) AS MAX_JAN,
	   MIN(JANEIRO) AS MIN_JAN,
	   TRUNCATE(AVG(JANEIRO),2) AS MEDIA_JAN
	   FROM VENDEDORES;

/* A30 - AGREGAMOS COM SUM() */

SELECT SUM(JANEIRO) AS TOTAL_JAN,
	   SUM(FERVEREIRO) AS TOTAL_FEV,
	   SUM(MARCO) AS TOTAL_MAR
FROM VENDEDORES;

SELECT * FROM VENDEDORES;

/* VENDA POR SEXO */

SELECT SUM(MARCO) AS "TOTAL_MARCO"
FROM VENDEDORES
GROUP BY SEXO;

/* A31 - SUBQUERES
VENDEDORES QUE VENDE MENOS EM MARCO E O SEU NOME 

NOME E O VALOR QUE VENDE MAS EM MARCO

QUEM VENDERU MAS QUE O VALOR MEDIO DE FEV */

SELECT NOME, MIN(MARCO) AS MIN_MARCO
FROM VENDEDORES;

SELECT * FROM VENDEDORES;

SELECT MIN(MARCO) FROM VENDEDORES;

SELECT NOME, MARCO FROM VENDEDORES
WHERE MARCO = (SELECT MIN(MARCO)FROM VENDEDORES);

SELECT NOME, FERVEREIRO FROM VENDEDORES
WHERE FERVEREIRO = (SELECT MAX(FERVEREIRO)FROM VENDEDORES);

SELECT NOME, MARCO FROM VENDEDORES
WHERE MARCO > (SELECT AVG(MARCO) FROM VENDEDORES);

SELECT NOME, FERVEREIRO FROM VENDEDORES
WHERE FERVEREIRO > (SELECT AVG(FERVEREIRO) FROM VENDEDORES);

SELECT AVG (FERVEREIRO) FROM VENDEDORES;

SELECT NOME, FERVEREIRO FROM VENDEDORES
WHERE FERVEREIRO < (SELECT AVG(FERVEREIRO) FROM VENDEDORES);

/* A32 - OPERACOES EM LINHA */

SELECT * FROM VENDEDORES;

SELECT NOME,
		JANEIRO,
		FERVEREIRO,
		MARCO,
		(JANEIRO+FERVEREIRO+MARCO) AS "TOTAL",
		TRUNCATE((JANEIRO+FERVEREIRO+MARCO)/3,2) AS "MEDIA"
		FROM VENDEDORES;

/* APLICANDO UM % */

SELECT NOME,
		JANEIRO,
		FERVEREIRO,
		MARCO,
		(JANEIRO+FERVEREIRO+MARCO) AS "TOTAL",
		(JANEIRO+FERVEREIRO+MARCO)  * .25 AS "DESCONTO",
		TRUNCATE((JANEIRO+FERVEREIRO+MARCO)/3,2) AS "MEDIA"
		FROM VENDEDORES;

/* A33 - ALTERANDO TABELAS */

CREATE TABLE TABELA(
	COLUNA1 VARCHAR(30),
	COLUNA2 VARCHAR(30),
	COLUNA3 VARCHAR(30)
);

CREATE TABLE TABELA(
	COLUNA1 INT PRIMARY KEY AUTO_INCREMENT
);

--ADICIONANDO UMA PK
ALTER TABLE TABELA
ADD PRIMARY KEY (COLUNA1);

DESC TABELA;

--ADICIONANDO COLUNA SEM POSICAO. UTIMA POSICAO
ALTER TABLE TABELA
ADD COLUNA100 VARCHAR(30);

ALTER TABLE TABELA
MODIFY COLUNA100 INT;

--ADICIONANDO UMA COLUNA COM POSICAO
ALTER TABLE TABELA
ADD COLUNA4 VARCHAR(30) NOT NULL UNIQUE
AFTER COLUNA3;

--MODIFICANDO O TIPO DE CAMPO
ALTER TABLE TABELA
MODIFY COLUNA2 DATE NOT NULL;

--REMOVENDO O NOME DA TABELA
ALTER TABLE TABELA
RENAME PESSOA;

CREATE TABLE TIME(
	IDTIME INT PRIMARY KEY AUTO_INCREMENT,
	TIME VARCHAR(30),
	ID_PESSOA VARCHAR(30)
); 

--FOREIGN KEY
ALTER TABLE TIME
ADD FOREIGN KEY(ID_PESSOA)
REFERENCES PESSOA(COLUNA1);

/*VERIFICAR AS CHAVES */
SHOW CREATE TABLE TIME;

/* A34 - ORGANIZACAO DE CHAVES - CONSTRAINT (REGRA) */

CREATE TABLE JOGADOR(
	IDJOGADOR INT PRIMARY KEY AUTO_INCREMENT,
	NOME VARCHAR(30)
);

CREATE TABLE TIMES(
	IDTIME INT PRIMARY KEY AUTO_INCREMENT,
	NOMETIME VARCHAR(30),
	ID_JOGADOR INT,
	FOREIGN KEY(ID_JOGADOR)
	REFERENCES JOGADOR(IDJOGADOR)
);

INSERT INTO JOGADOR VALUES(NULL,'GUERREIRO');
INSERT INTO TIMES VALUES(NULL,'FLAMENGO',1);

SHOW CREATE TABLE JOGADOR;
SHOW CREATE TABLE TIMES;

/* A35 - ORGANIZAR CHAVES */

SHOW TABLES;

DROP TABLES ENDERECO;
DROP TABLES TELEFONE;
DROP TABLES CLIENTE;

CREATE TABLE CLIENTE(
	IDCLIENTE INT,
	NOME VARCHAR(30) NOT NULL
);

CREATE TABLE TELEFONE(
	IDTELEFONE INT,
	TIPO CHAR(3) NOT NULL,
	NUMERO VARCHAR(10) NOT NULL,
	ID_CLIENTE INT
);

ALTER TABLE CLIENTE ADD CONSTRAINT PK_CLIENTE
PRIMARY KEY(IDCLIENTE);

ALTER TABLE TELEFONE ADD CONSTRAINT FK_CLIENTE_TELEFONE
FOREIGN KEY(ID_CLIENTE) REFERENCES CLIENTE(IDCLIENTE);

SHOW CREATE TABLE TELEFONE;

/* ADICIONANDO DADOS */

SHOW DATABASES;

USE INFORMATION_SCHEMA;

STATUS

SHOW TABLES;

DESC TABLE_CONSTRAINTS;

SELECT CONSTRAINT_SCHEMA AS "BANCO",
		TABLE_NAME AS "TABELA",
		CONSTRAINT_NAME AS "NOME REGRA",
		CONSTRAINT_TYPE AS "TIPO"
		FROM TABLE_CONSTRAINTS
		WHERE CONSTRAINT_SCHEMA = 'COMERCIO';

/* APAGANDO CONSTRAINTS */

USE COMERCIO;

ALTER TABLE TELEFONE
DROP FOREIGN KEY FK_CLIENTE_TELEFONE;

ALTER TABLE TELEFONE ADD CONSTRAINT FK_CLIENTE_TELEFONE
FOREIGN KEY(ID_CLIENTE) REFERENCES CLIENTE(IDCLIENTE);

/* A36 - E ACOES DE CONSTRAINTS */

SHOW TABLES;

INSERT INTO CLIENTE VALUES(1,'RICARDO');
INSERT INTO CLIENTE VALUES(2,'CLARA');
INSERT INTO CLIENTE VALUES(3,'JULIA');
INSERT INTO CLIENTE VALUES(4,'ANA');

INSERT INTO TELEFONE VALUES(10,'CEL','9.5346-8431',2); 
INSERT INTO TELEFONE VALUES(20,'RES','9.5453-4531',2);
INSERT INTO TELEFONE VALUES(30,'CEL','9.3586-4351',1);
INSERT INTO TELEFONE VALUES(40,'RES','9.5786-7646',3);
INSERT INTO TELEFONE VALUES(50,'COM','9.5486-7465',1);
INSERT INTO TELEFONE VALUES(60,'CEL','9.5468-4684',4);

SELECT NOME, TIPO, NUMERO
FROM CLIENTE 
INNER JOIN TELEFONE
ON IDCLIENTE = ID_CLIENTE;

/* ERRO DE REFERENCIA */
DELETE FROM CLIENTE WHERE IDCLIENTE = 1;

/* CORRIGINDO ERRRO */
DELETE FROM TELEFONE
WHERE ID_CLIENTE = 1;
DELETE FROM CLIENTE WHERE IDCLIENTE = 1;

/* APAGANDO FOREIGN KEY */

ALTER TABLE TELEFONE DROP FOREIGN KEY FK_CLIENTE_TELEFONE;

/* RECRIANDO A FK */

ALTER TABLE TELEFONE ADD CONSTRAINT FK_CLIENTE_TELEFONE
FOREIGN KEY(ID_CLIENTE) REFERENCES CLIENTE(IDCLIENTE)
ON DELETE CASCADE;

SELECT NOME, TIPO, NUMERO
FROM CLIENTE
ON IDCLIENTE = ID_CLIENTE;

SELECT * FROM CLIENTE;

DELETE FROM CLIENTE WHERE IDCLIENTE = 3;

SELETC * FROM TELEFONE;

/* SET NULL - DELETE CASCADE */

/* A37 - CORRECAO EX 01 */

CREATE DATABASE PROJETO;

USE PROJETO;

/* A38 - MODELO FISICO */

CREATE DATABASE OFICINA;

USE OFICINA;

CREATE TABLE CLIENTE(
	IDCLIENTE INT PRIMARY KEY AUTO_INCREMENT,
	NOME VARCHAR(30) NOT NULL,
	SEXO ENUM('M','F') NOT NULL,
	ID_CARRO INT UNIQUE
);

CREATE TABLE TELEFONE(
	IDTELEFONE INT PRIMARY KEY AUTO_INCREMENT,
	TIPO ENUM('CEL','RES','COM') NOT NULL,
	NUMERO VARCHAR(30) NOT NULL,
	ID_CLIENTE INT
);

CREATE TABLE MARCA(
	IDMARCA INT PRIMARY KEY AUTO_INCREMENT,
	MARCA VARCHAR(30) UNIQUE
);

CREATE TABLE CARRO(
	IDCARRO INT PRIMARY KEY AUTO_INCREMENT,
	MODELO VARCHAR(30) NOT NULL,
	PLACA VARCHAR(30) NOT NULL UNIQUE,
	ID_MARCA INT
);

CREATE TABLE COR(
	IDCOR INT PRIMARY KEY AUTO_INCREMENT,
	COR VARCHAR(30) UNIQUE
);

CREATE TABLE CARRO_COR(
	ID_CARRO INT,
	ID_COR INT,
	PRIMARY KEY(ID_CARRO,ID_COR)
);

/* CONSTRAINTS */

ALTER TABLE TELEFONE
ADD CONSTRAINT FK_TELEFONE_CLIENTE
FOREIGN KEY(ID_CLIENTE)
REFERENCES CLIENTE(IDCLIENTE);

ALTER TABLE CLIENTE
ADD CONSTRAINT FK_CLIENTE_CARRO
FOREIGN KEY(ID_CARRO)
REFERENCES CARRO(IDCARRO);

ALTER TABLE CARRO
ADD CONSTRAINT FK_CARRO_MARCA
FOREIGN KEY(ID_MARCA)
REFERENCES MARCA(IDMARCA);

ALTER TABLE CARRO_COR
ADD CONSTRAINT FK_COR
FOREIGN KEY(ID_COR)
REFERENCES COR(IDCOR);

ALTER TABLE CARRO_COR
ADD CONSTRAINT FK_CARRO
FOREIGN KEY(ID_CARRO)
REFERENCES CARRO(IDCARRO);

/* PRENCER O BANCO COM NO MINIMO 10 CLIENTES */

INSERT INTO MARCA VALUES(NULL,'CHEVROLET');
INSERT INTO MARCA VALUES(NULL,'FIATE');
INSERT INTO MARCA VALUES(NULL,'HYUNDAI');
INSERT INTO MARCA VALUES(NULL,'RENAULT');
INSERT INTO MARCA VALUES(NULL,'WOLKSWAGEN');

INSERT INTO COR VALUES(NULL,'AMARELO');
INSERT INTO COR VALUES(NULL,'VERMELHO');
INSERT INTO COR VALUES(NULL,'AZUL');
INSERT INTO COR VALUES(NULL,'BRANCO');
INSERT INTO COR VALUES(NULL,'LARANJA');
INSERT INTO COR VALUES(NULL,'VERDE');
INSERT INTO COR VALUES(NULL,'ROXO');
INSERT INTO COR VALUES(NULL,'PRATA');
INSERT INTO COR VALUES(NULL,'ROSA');
INSERT INTO COR VALUES(NULL,'MARRON');

INSERT INTO CARRO VALUES(NULL,'UNO','FSD-4895',2);
INSERT INTO CARRO VALUES(NULL,'CELTA','KTJ-9845',1);
INSERT INTO CARRO VALUES(NULL,'ONIX','GHR-9845',1);
INSERT INTO CARRO VALUES(NULL,'HB20','ASF-6485',3);
INSERT INTO CARRO VALUES(NULL,'SANDERO','MVM-9485',4);
INSERT INTO CARRO VALUES(NULL,'GOL','PUI-8425',5);
INSERT INTO CARRO VALUES(NULL,'FUSCA','GHK-8485',5);
INSERT INTO CARRO VALUES(NULL,'I30','ERT-9845',3);
INSERT INTO CARRO VALUES(NULL,'ESTRADA','DFG-5482',2);
INSERT INTO CARRO VALUES(NULL,'SAVEIRO','NNM-4862',5);

INSERT INTO CLIENTE VALUES(NULL,'JOAO','M',5);
INSERT INTO CLIENTE VALUES(NULL,'ADRIANA','F',3);
INSERT INTO CLIENTE VALUES(NULL,'ANA','F',6);
INSERT INTO CLIENTE VALUES(NULL,'JORGE','M',8);
INSERT INTO CLIENTE VALUES(NULL,'CARLOS','M',4);
INSERT INTO CLIENTE VALUES(NULL,'BARBARA','F',9);
INSERT INTO CLIENTE VALUES(NULL,'BRENDO','M',2);
INSERT INTO CLIENTE VALUES(NULL,'CARLA','F',1);
INSERT INTO CLIENTE VALUES(NULL,'DANIEL','M',7);
INSERT INTO CLIENTE VALUES(NULL,'DANIELE','F',10);

INSERT INTO TELEFONE VALUES(NULL,'CEL',5189-4894,5);
INSERT INTO TELEFONE VALUES(NULL,'RES',9848-9489,8);
INSERT INTO TELEFONE VALUES(NULL,'COM',9849-8489,7);
INSERT INTO TELEFONE VALUES(NULL,'CEL',9418-9489,6);
INSERT INTO TELEFONE VALUES(NULL,'RES',6519-6848,1);
INSERT INTO TELEFONE VALUES(NULL,'COM',9848-9649,3);
INSERT INTO TELEFONE VALUES(NULL,'CEL',6418-9498,4);
INSERT INTO TELEFONE VALUES(NULL,'RES',9894-8949,2);
INSERT INTO TELEFONE VALUES(NULL,'COM',9849-8498,9);
INSERT INTO TELEFONE VALUES(NULL,'CEL',9848-9498,10);

INSERT INTO CARRO_COR VALUES(5,9);
INSERT INTO CARRO_COR VALUES(3,2);
INSERT INTO CARRO_COR VALUES(6,4);
INSERT INTO CARRO_COR VALUES(8,3);
INSERT INTO CARRO_COR VALUES(4,1);
INSERT INTO CARRO_COR VALUES(9,6);
INSERT INTO CARRO_COR VALUES(2,5);
INSERT INTO CARRO_COR VALUES(1,7);
INSERT INTO CARRO_COR VALUES(5,8);
INSERT INTO CARRO_COR VALUES(10,1);

/* A39 - ENTEDENDO TRIGGERS */

/* ESTRUTURA DE UMA TRIGGER */

CREATE TRIGGER NOME 
BEFORE/AFTER INSERT/DELETE/UPDATE ON TABLE
FOR EACH ROW (PARA CADA LINHA)
BEGIN -> INICIO 

			QUAL QUER COMANDO SQL

END -> FIM

CREATE DATABASE AULA40;

USE AULA40;

CREATE TABLE USUARIO(
	IDUSUARIO INT PRIMARY KEY AUTO_INCREMENT,
	NOME VARCHAR(30),
	LOGIN VARCHAR(30),
	SENHA VARCHAR(100)
);

CREATE TABLE BKP_USUARIO(
	IDBACKUP INT PRIMARY KEY AUTO_INCREMENT,
	IDUSUARIO INT,
	NOME VARCHAR(30),
	LOGIN VARCHAR(30)
);

/* CRIANDO A TRIGGER */

DELIMITER $

CREATE TRIGGER BACKUP_USER
	BEFORE DELETE ON USUARIO 
	FOR EACH ROW
	BEGIN

			INSERT INTO BKP_USUARIO VALUES
			(NULL,OLD.IDUSUARIO,OLD.NOME,OLD.LOGIN);

END 
$

DELIMITER ;

INSERT INTO USUARIO VALUES(NULL,'ANDRADE','ANDRADE2009','HEXACAMPEAO');

SELECT * FROM USUARIO;

DELETE FROM USUARIO WHERE IDUSUARIO = 1;

SELECT * FROM BKP_USUARIO;

/* A41 - COMUNICADO ENTRE BANCOS */

CREATE DATABASE LOJA;

USE LOJA;

CREATE TABLE PRODUTO(
	IDPRODUTO INT PRIMARY KEY AUTO_INCREMENT,
	NOME VARCHAR(30),
	VALOR FLOAT(10,2)
);

STATUS

CREATE DATABASE BACKUP;

USE BACKUP;

CREATE TABLE BKP_PRODUTO(
	IDBKP INT PRIMARY KEY AUTO_INCREMENT,
	IDPRODUTO INT,
	NOME VARCHAR(30),
	VALOR FLOAT(10,2)
);

USE LOJA;

STATUS

INSERT INTO BACKUP.BKP_PRODUTO VALUES(NULL,1000,'TESTE',0.0);

SELECT * FROM BACKUP.BKP_PRODUTO;

DELIMITER $

CREATE TRIGGER BACKUP_PRODUT
	BEFORE INSERT ON PRODUTO
	FOR EACH ROW
	BEGIN

			INSERT INTO BACKUP.BKP_PRODUTO VALUES
			(NULL,NEW.IDPRODUTO,NEW.NOME,NEW.VALOR);

END
$

DELIMITER ;

INSERT INTO PRODUTO VALUES(NULL,'LIVRO MODELAGEM',50.00);
INSERT INTO PRODUTO VALUES(NULL,'LIVRO BI',80.00);
INSERT INTO PRODUTO VALUES(NULL,'LIVRO ORACLE',70.00);
INSERT INTO PRODUTO VALUES(NULL,'LIVRO SQL SERVER',100.00);

SELECT * FROM PRODUTO;

DELIMITER $

CREATE TRIGGER BACKUP_PRODUTO_DEL
	BEFORE DELETE ON PRODUTO 
	FOR EACH ROW
	BEGIN

			INSERT INTO BACKUP.BKP_PRODUTO VALUES
			(NULL,OLD.IDPRODUTO,OLD.NOME,OLD.VALOR);

END
$

DELIMITER ;

DELETE FROM PRODUTO WHERE IDPRODUTO = 2;

SELECT * FROM BACKUP.BKP_PRODUTO;

DROP TRIGGER BACKUP_PRODUT;

DELIMITER $

CREATE TRIGGER BACKUP_PRODUTO
	AFTER INSERT ON PRODUTO 
	FOR EACH ROW
	BEGIN

			INSERT INTO BACKUP.BKP_PRODUTO VALUES
			(NULL,NEW.IDPRODUTO,NEW.NOME,NEW.VALOR);

END 
$

DELIMITER ;

INSERT INTO PRODUTO VALUES(NULL,'LIVRO C#',100.00);

SELECT * FROM PRODUTO;
SELECT * FROM BACKUP.BKP_PRODUTO;

ALTER TABLE BACKUP.BKP_PRODUTO
ADD EVENTO CHAR(1);

DROP TRIGGER BACKUP_PRODUTO_DEL;

DELIMITER $

CREATE TRIGGER BACKUP_PRODUTO_DEL
	BEFORE DELETE ON PRODUTO 
	FOR EACH ROW
	BEGIN

			INSERT INTO BACKUP.BKP_PRODUTO VALUES
			(NULL,OLD.IDPRODUTO,OLD.NOME,OLD.VALOR,'D');

END
$

DELIMITER ;

DELETE FROM PRODUTO WHERE IDPRODUTO = 4;

SELECT * FROM BACKUP.BKP_PRODUTO;

/* A43 - TRIGGER DE AUDITORIA */

DELIMITER ;

DROP DATABASE LOJA;
DROP DATABASE BACKUP;
CREATE DATABASE LOJA;

USE LOJA;

CREATE TABLE PRODUTO(
	IDPRODUTO INT PRIMARY KEY AUTO_INCREMENT,
	NOME VARCHAR(30),
	VALOR FLOAT(10.2)
);

INSERT INTO PRODUTO VALUES(NULL,'LIVRO MODELAGEM',50.00);
INSERT INTO PRODUTO VALUES(NULL,'LIVRO BI',80.00);
INSERT INTO PRODUTO VALUES(NULL,'LIVRO ORACLE',70.00);
INSERT INTO PRODUTO VALUES(NULL,'LIVRO SQL SERVER',100.00);

/* QUANDO */

SELECT NOW();

/* QUEM */

SELECT CURRENT_USER();

CREATE DATABASE BACKUP;

USE BACKUP;

CREATE TABLE BKP_PRODUTO(
	IDBACKUP INT PRIMARY KEY AUTO_INCREMENT,
	IDPRODUTO INT,
	NOME VARCHAR(30),
	VALOR_ORIGINAL FLOAT(10,2),
	VALOR_ALTERADO FLOAT(10,2),
	DATA DATETIME,
	USUARIO VARCHAR(30),
	EVENTO CHAR(1)
);

USE LOJA;

SELECT * FROM PRODUTO;

DELIMITER $

CREATE TRIGGER AUDIT_PROD
	AFTER UPDATE ON PRODUTO 
	FOR EACH ROW
	BEGIN

			INSERT INTO BACKUP.BKP_PRODUTO VALUES
			(NULL,OLD.IDPRODUTO,OLD.NOME,OLD.VALOR,NEW.VALOR,NOW(),CURRENT_USER(),'U');

END
$

DELIMITER ;

UPDATE PRODUTO SET VALOR = 110.10
WHERE IDPRODUTO = 4;

SELECT * FROM PRODUTO;
SELECT * FROM BACKUP.BKP_PRODUTO;

/* A44 - AUTORELACIONAMENTO */

CREATE TABLE CURSOS(
	IDCURSO INT PRIMARY KEY AUTO_INCREMENT,
	NOME VARCHAR(30),
	HORAS INT,
	VALOR FLOAT(10,2),
	ID_PREREQ INT
);

ALTER TABLE CURSOS ADD CONSTRAINT FK_PREREQ
FOREIGN KEY(ID_PREREQ) REFERENCES CURSOS(IDCURSO);

INSERT INTO CURSOS VALUES(NULL,'BD RELACIONAMENTOS',20,400.00,NULL);
INSERT INTO CURSOS VALUES(NULL,'BUSINESS INTELIGENCE',40,800.00,1);
INSERT INTO CURSOS VALUES(NULL,'RELATORIOS AVANCADOS',20,600.00,2);
INSERT INTO CURSOS VALUES(NULL,'LOGICA PROGRAMA',20,400.00,NULL);
INSERT INTO CURSOS VALUES(NULL,'RUBY',30,500.00,4);

SELECT * FROM CURSOS;

SELECT NOME, VALOR, HORAS, IFNULL(ID_PREREQ,"SEM REQ") REQUISITO FROM CURSOS;

/* NOME, VALOR, HORAS E O NOME DO PRE REQUISITO DO CURSO */

S

/* A45 - CURSORES */

CREATE DATABASE CURSORES;

USE CURSORES;

CREATE TABLE VENDEDORES(
	IDVENDEDOR INT PRIMARY KEY AUTO_INCREMENT,
	NOME VARCHAR(50),
	JAN INT,
	FEV INT,
	MAR INT
);

INSERT INTO VENDEDORES VALUES(NULL,'MAFRA',37894,645285,165166);
INSERT INTO VENDEDORES VALUES(NULL,'CLARA',61984,416516,286455);
INSERT INTO VENDEDORES VALUES(NULL,'JOAO',85548,684646,321564);
INSERT INTO VENDEDORES VALUES(NULL,'LILIAN',51654,646846,415441);
INSERT INTO VENDEDORES VALUES(NULL,'ANTONIO',216515,494961,646846);
INSERT INTO VENDEDORES VALUES(NULL,'GLORIA',849849,894984,4745776);

SELECT * FROM VENDEDORES;

SELECT NOME, (JAN+FEV+MAR) AS TOTAL FROM VENDEDORES;
SELECT NOME, (JAN+FEV+MAR) AS TOTAL, (JAN+FEV+MAR)/3 AS MEDIA FROM VENDEDORES;

CREATE TABLE VEND_TOTAL(
	NOME VARCHAR(50),
	JAN INT,
	FEV INT,
	MAR INT,
	TOTAL INT,
	MEDIA INT
);

DELIMITER $

CREATE PROCEDURE INSEREDADOS()
BEGIN
		DECLARE FIM INT DEFAULT 0;
		DECLARE VAR1, VAR2, VAR3, VTOTAL, VMEDIA INT; 
		DECLARE VNOME VARCHAR(50);

		DECLARE REG CURSOR FOR(
			SELECT NOME, JAN, FEV, MAR FROM VENDEDORES
		);

		DECLARE CONTINUE HANDLER FOR NOT FOUND SET FIM =1;

		OPEN REG;

		REPEAT 

		FETCH REG INTO VNOME, VAR1, VAR2, VAR3;
		IF NOT FIM THEN 

				SET VTOTAL = VAR1 + VAR2 + VAR3;
				SET VMEDIA = VTOTAL / 3;

				INSERT INTO VEND_TOTAL VALUES(VNOME, VAR1, VAR2, VAR3, VTOTAL, VMEDIA);
			END IF;

		UNTIL FIM END REPEAT;

		CLOSE REG;
END
$

DELIMITER ;

SELECT * FROM VENDEDORES;
SELECT * FROM VEND_TOTAL;

CALL INSEREDADOS();

INSERT INTO VENDEDORES VALUES(NULL,'LETICIA',546,5465,84864);
INSERT INTO VENDEDORES VALUES(NULL,'CELIA',454,7375,75675);

SELECT * FROM VENDEDORES;
SELECT * FROM VEND_TOTAL;

DELETE FROM VEND_TOTAL;

CALL INSEREDADOS();

/* A46 - TRIGGERS COM VARIAVEIS */

DELIMITER $

CREATE TRIGGER CADTOTAL
BEFORE INSERT ON VENDEDORES
FOR EACH ROW
BEGIN
		DECLARE VTOTAL, VMEDIA INT;
		SET VTOTAL := NEW.JAN + NEW.FEV + NEW.MAR;
		SET VMEDIA :=(NEW.JAN + NEW.FEV + NEW.MAR)/3;
		INSERT INTO VEND_TOTAL VALUES
		(NEW.NOME,NEW.JAN,NEW.FEV,NEW.MAR,VTOTAL,VMEDIA);
END 
$

DELIMITER ;

INSERT INTO VENDEDORES VALUES(NULL,'JULIO',999,9999,99999);

SELECT * FROM VENDEDORES;
SELECT * FROM VEND_TOTAL;

/* A47 SEGUNDA E TERCEIRAS FORMAS NORMAIS 

		PRIMEIRA FN
	
		ATOMICIDADE - UM CAMPO NAO PODE SER DIVISIVEL
		UM CAMPO NAO PODE SER VETORIZADO
		PK CHAVE PRIMARIA */

CREATE DATABASE CONSULTORIO;

USE CONSULTORIO;

CREATE TABLE PACIENTE(
	IDPACIENTE INT PRIMARY KEY AUTO_INCREMENT,
	NOME VARCHAR(30),
	SEXO CHAR(1),
	EMAIL VARCHAR(30),
	NACIMENTO DATE
);

CREATE TABLE MEDICO(
	IDMEDICO INT PRIMARY KEY AUTO_INCREMENT,
	NOME VARCHAR(30),
	SEXO CHAR(1),
	ESPECIALIDADE VARCHAR(30),
	FUNCIONARIO ENUM('S','N')
);

CREATE TABLE HOSPITAL(
	IDHOSPITAL INT PRIMARY KEY AUTO_INCREMENT,
	NOME VARCHAR(30),
	BAIRRO VARCHAR(30),
	CIDADE VARCHAR(30),
	ESTADO CHAR(2)
);

CREATE TABLE CONSULTA(
	IDCONSULTA INT PRIMARY KEY AUTO_INCREMENT,
	IDPACIENTE INT,
	IDMEDICO INT,
	IDHOSPITAL INT,
	DATA DATETIME,
	DIAGNOSTICO VARCHAR(50)
);

CREATE TABLE INTERNACAO(
	IDINTERNACAO INT PRIMARY KEY AUTO_INCREMENT,
	ENTRADA DATETIME,
	QUARTO INT,
	SAIDA DATETIME,
	OBSERVACOES VARCHAR(50),
	ID_CONSULTA INT UNIQUE
);

/* CRIANDO AS CONSTRAINTS - CORREÇÃO COD DO OBJ (PK,FK) _ TABELA PERTENCENTE _TABELA DE ONDE VEM */

ALTER TABLE CONSULTA ADD CONSTRAINT FK_CONSULTA_PACIENTE
    FOREIGN KEY (IDPACIENTE)
    REFERENCES PACIENTE (IDPACIENTE);
 
ALTER TABLE CONSULTA ADD CONSTRAINT FK_CONSULTA_MEDICO
    FOREIGN KEY (IDMEDICO)
    REFERENCES MEDICO (IDMEDICO);
 
ALTER TABLE CONSULTA ADD CONSTRAINT FK_CONSULTA_HOSPITAL
    FOREIGN KEY (IDHOSPITAL)
    REFERENCES HOSPITAL (IDHOSPITAL);
 
ALTER TABLE INTERNACAO ADD CONSTRAINT FK_INTERNACAO_CONSULTA
    FOREIGN KEY (ID_CONSULTA)
    REFERENCES CONSULTA (IDCONSULTA);

SHOW DATABASES;

USE INFORMATION_SCHEMA;

SHOW TABLES;

DESC TABLE_CONSTRAINTS;

SELECT * FROM TABLE_CONSTRAINTS;